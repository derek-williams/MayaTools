#autorigger using my naming convention
import maya.cmds as cmds
import maya.mel as mel
import random

skeleton_location = "W:/Production/Scripts/skeletonimport2.ma"
ik_fk_ctrl_location = "W:/Production/Scripts/ikfk.ma"

def importskeleton(s):
    cmds.file (skeleton_location, i = True)
    cmds.select(clear = True)
    cmds.select('root_JNT', r= True)
    cmds.group (name = 'JNTS')
    return

def mirrorskeleton(s):
    cmds.mirrorJoint( 'lf_clavicle_JNT', searchReplace = ('lf_', 'rt_'), mirrorBehavior = True, myz = True)
    cmds.mirrorJoint( 'lf_hip_JNT', searchReplace = ('lf_', 'rt_'), mirrorBehavior = True, myz = True)
    return

def legik(s):
    cmds.ikHandle( name = 'lf_leg_IK', solver = 'ikRPsolver', sj = 'ik_lf_hip_JNT', ee = 'ik_lf_ankle_JNT')
    cmds.ikHandle( name = 'rt_leg_IK', solver = 'ikRPsolver', sj = 'ik_rt_hip_JNT', ee = 'ik_rt_ankle_JNT')
    cmds.ikHandle( name = 'lf_ball_IK', solver = 'ikSCsolver', sj = 'ik_lf_ankle_JNT', ee = 'ik_lf_ball_JNT')
    cmds.ikHandle( name = 'lf_toe_IK', solver = 'ikSCsolver', sj = 'ik_lf_ball_JNT', ee = 'ik_lf_toe_JNT')
    cmds.ikHandle( name = 'rt_ball_IK', solver = 'ikSCsolver', sj = 'ik_rt_ankle_JNT', ee = 'ik_rt_ball_JNT')
    cmds.ikHandle( name = 'rt_toe_IK', solver = 'ikSCsolver', sj = 'ik_rt_ball_JNT', ee = 'ik_rt_toe_JNT')
    return

def createfootcontrols(s):
    anklePos = cmds.xform ( 'lf_ankle_JNT', q = True, ws = True, t = True)
    
    
    cmds.curve(name = 'lf_foot_CTRL', d =1, p=[(-0.081122, 0, -1.11758),(0.390719, 0, -0.921584),(0.514124, 0, -0.616704),(0.412496, 0, 0.0293557),(0.86256, 0, 0.552008),(0.920632, 0, 1.161772),(0.775452, 0, 1.669908),(0.38346, 0, 2.011088),(-0.131936, 0, 2.330484),(-0.552964, 0, 2.308708),(-0.654588, 0, 1.691688),(-0.57474, 0, 0.63912),(-0.364226, 0, 0.109206),(-0.531184, 0, -0.39893),(-0.465852, 0, -0.841736),(-0.081122, 0, -1.11758)])  
    cmds.select('lf_foot_CTRL', r = True)
    
    cmds.move(anklePos[0],anklePos[1],anklePos[2])
    cmds.setAttr('lf_foot_CTRL.translateY', 0)
    foot_bb = cmds.xform('lf_foot_CTRL', q = True, ws = True, bb = True)
    foot_xsize = (foot_bb[3] - foot_bb[0])
    foot_xsize = (foot_xsize/2)
    foot_xscale = (anklePos[0]/.9)
    x_scale = (foot_xscale/foot_xsize)
    cmds.scale(x_scale,1,1)
    return
def addlocator(s):
    placeholder = cmds.spaceLocator( name = 'spaceLocator')
    cmds.select(placeholder, r = True)
    cmds.rename('heelPivotLocator')
    return
    
def reversefoot(s):
    control =  'lf_foot_CTRL'
    controlPos = cmds.xform ( control, q = True, ws = True, t = True)
    legIK =  cmds.textFieldGrp("leg_ik",  q=True, tx=True )
    legIKPos = cmds.xform ( legIK, q = True, ws = True, t = True)
    ballIK =  cmds.textFieldGrp("ball_ik",  q=True, tx=True )
    ballIKPos = cmds.xform ( ballIK, q = True, ws = True, t = True)
    toeIK =  cmds.textFieldGrp("toe_ik",  q=True, tx=True )
    toeIKPos = cmds.xform ( toeIK, q = True, ws = True, t = True)
    
    locPos = cmds.xform('heelPivotLocator', q =True, ws = True, t = True)
    
    cmds.select(legIK, r= True)
    cmds.select(ballIK, add = True)
    grpBallRoll = cmds.group(name = 'Ball Roll')
    cmds.move(ballIKPos[0], ballIKPos[1], ballIKPos[2], (grpBallRoll + '.scalePivot'), (grpBallRoll + '.rotatePivot'))
    
    cmds.select(toeIK, r=True)
    grpToeTap = cmds.group( name= 'Toe Tap')
    cmds.move(ballIKPos[0], ballIKPos[1], ballIKPos[2], (grpToeTap + '.scalePivot'), (grpToeTap + '.rotatePivot'))
    
    cmds.select(grpBallRoll)
    cmds.select(grpToeTap, add =True)
    grpToeRoll = cmds.group(name = 'Toe Roll')
    cmds.move(toeIKPos[0], toeIKPos[1], toeIKPos[2], (grpToeRoll + '.scalePivot'), (grpToeRoll + '.rotatePivot'))
    
    cmds.select(grpToeRoll, r =True)
    grpBallPivot = cmds.group (name= 'Ball Pivot')
    cmds.move(ballIKPos[0], ballIKPos[1], ballIKPos[2], (grpBallPivot + '.scalePivot'), (grpBallPivot + '.rotatePivot'))
    
    cmds.select(grpBallPivot, r = True)
    grpHeelPivot = cmds.group(name = 'Heel Pivot')
    cmds.move (locPos[0], locPos[1], locPos[2], (grpHeelPivot + '.scalePivot'), (grpHeelPivot + '.rotatePivot'))
    
    cmds.parent(grpHeelPivot, control)
    
    cmds.select(control)
    cmds.addAttr (longName = "Ball_Roll", attributeType = "double", dv = 0, keyable = True)
    cmds.addAttr (longName = "Toe_Roll", attributeType = "double", dv = 0, keyable = True)
    cmds.addAttr (longName = "Heel_Roll", attributeType = "double", dv = 0, keyable = True)
    cmds.addAttr (longName = "Ball_Pivot", attributeType = "double", dv = 0, keyable = True)
    cmds.addAttr (longName = "Toe_Pivot", attributeType = "double", dv = 0, keyable = True)
    cmds.addAttr (longName = "Heel_Pivot", attributeType = "double", dv = 0, keyable = True)
    cmds.addAttr (longName = "Toe_Tap", attributeType = "double", dv = 0, keyable = True)
    cmds.addAttr (longName = "Foot_Bank", attributeType = "double", dv = 0, keyable = True)
    
    cmds.connectAttr( (control + '.Ball_Roll'), (grpBallRoll + '.rotateX'), f = True)
    cmds.connectAttr( (control + '.Toe_Roll'), (grpToeRoll + '.rotateX'), f = True)
    cmds.connectAttr( (control + '.Heel_Roll'), (grpHeelPivot + '.rotateX'), f = True)
    cmds.connectAttr( (control + '.Ball_Pivot'), (grpBallPivot + '.rotateY'), f = True)
    cmds.connectAttr( (control + '.Toe_Pivot'), (grpToeRoll + '.rotateY'), f = True)
    cmds.connectAttr( (control + '.Heel_Pivot'), (grpHeelPivot + '.rotateY'), f = True)
    cmds.connectAttr( (control + '.Toe_Tap'), (grpToeTap + '.rotateX'), f = True)
    cmds.connectAttr( (control + '.Foot_Bank'), (grpBallRoll + '.rotateZ'), f = True)
    cmds.connectAttr( (control + '.Foot_Bank'), (grpToeRoll + '.rotateZ'), f = True)

    cmds.delete('heelPivotLocator')

    cmds.rename(grpBallRoll, (control + '.Ball Roll'))
    cmds.rename(grpToeRoll, (control + '.Toe Roll'))
    cmds.rename(grpBallPivot, (control + '.Ball Pivot'))
    cmds.rename(grpHeelPivot, (control + '.Heel Pivot'))
    cmds.rename(grpToeTap, (control + '.Toe Tap'))


    
    return
def altreversefoot(s):
    control =  'rt_foot_CTRL'
    controlPos = cmds.xform ( control, q = True, ws = True, t = True)
    legIK =  'rt_leg_IK'
    legIKPos = cmds.xform ( legIK, q = True, ws = True, t = True)
    ballIK =  'rt_ball_IK'
    ballIKPos = cmds.xform ( ballIK, q = True, ws = True, t = True)
    toeIK =  'rt_toe_IK'
    toeIKPos = cmds.xform ( toeIK, q = True, ws = True, t = True)
    
    locPos = cmds.xform('heelPivotLocator', q =True, ws = True, t = True)
    
    cmds.select(legIK, r= True)
    cmds.select(ballIK, add = True)
    grpBallRoll = cmds.group(name = 'Ball Roll')
    cmds.move(ballIKPos[0], ballIKPos[1], ballIKPos[2], (grpBallRoll + '.scalePivot'), (grpBallRoll + '.rotatePivot'))
    
    cmds.select(toeIK, r=True)
    grpToeTap = cmds.group( name= 'Toe Tap')
    cmds.move(ballIKPos[0], ballIKPos[1], ballIKPos[2], (grpToeTap + '.scalePivot'), (grpToeTap + '.rotatePivot'))
    
    cmds.select(grpBallRoll)
    cmds.select(grpToeTap, add =True)
    grpToeRoll = cmds.group(name = 'Toe Roll')
    cmds.move(toeIKPos[0], toeIKPos[1], toeIKPos[2], (grpToeRoll + '.scalePivot'), (grpToeRoll + '.rotatePivot'))
    
    cmds.select(grpToeRoll, r =True)
    grpBallPivot = cmds.group (name= 'Ball Pivot')
    cmds.move(ballIKPos[0], ballIKPos[1], ballIKPos[2], (grpBallPivot + '.scalePivot'), (grpBallPivot + '.rotatePivot'))
    
    cmds.select(grpBallPivot, r = True)
    grpHeelPivot = cmds.group(name = 'Heel Pivot')
    cmds.move (locPos[0], locPos[1], locPos[2], (grpHeelPivot + '.scalePivot'), (grpHeelPivot + '.rotatePivot'))
    
    cmds.parent(grpHeelPivot, control)
    
    cmds.select(control)
    cmds.addAttr (longName = "Ball_Roll", attributeType = "double", dv = 0, keyable = True)
    cmds.addAttr (longName = "Toe_Roll", attributeType = "double", dv = 0, keyable = True)
    cmds.addAttr (longName = "Heel_Roll", attributeType = "double", dv = 0, keyable = True)
    cmds.addAttr (longName = "Ball_Pivot", attributeType = "double", dv = 0, keyable = True)
    cmds.addAttr (longName = "Toe_Pivot", attributeType = "double", dv = 0, keyable = True)
    cmds.addAttr (longName = "Heel_Pivot", attributeType = "double", dv = 0, keyable = True)
    cmds.addAttr (longName = "Toe_Tap", attributeType = "double", dv = 0, keyable = True)
    cmds.addAttr (longName = "Foot_Bank", attributeType = "double", dv = 0, keyable = True)
    
    cmds.connectAttr( (control + '.Ball_Roll'), (grpBallRoll + '.rotateX'), f = True)
    cmds.connectAttr( (control + '.Toe_Roll'), (grpToeRoll + '.rotateX'), f = True)
    cmds.connectAttr( (control + '.Heel_Roll'), (grpHeelPivot + '.rotateX'), f = True)
    cmds.connectAttr( (control + '.Ball_Pivot'), (grpBallPivot + '.rotateY'), f = True)
    cmds.connectAttr( (control + '.Toe_Pivot'), (grpToeRoll + '.rotateY'), f = True)
    cmds.connectAttr( (control + '.Heel_Pivot'), (grpHeelPivot + '.rotateY'), f = True)
    cmds.connectAttr( (control + '.Toe_Tap'), (grpToeTap + '.rotateX'), f = True)
    cmds.connectAttr( (control + '.Foot_Bank'), (grpBallRoll + '.rotateZ'), f = True)
    cmds.connectAttr( (control + '.Foot_Bank'), (grpToeRoll + '.rotateZ'), f = True)

    cmds.delete('heelPivotLocator')

    cmds.rename(grpBallRoll, (control + '.Ball Roll'))
    cmds.rename(grpToeRoll, (control + '.Toe Roll'))
    cmds.rename(grpBallPivot, (control + '.Ball Pivot'))
    cmds.rename(grpHeelPivot, (control + '.Heel Pivot'))
    cmds.rename(grpToeTap, (control + '.Toe Tap'))


    
    return
    
def altreversefootwindow(s):
    window2 = cmds.window(title = "Reverse Foot Setup" , iconName = 'Short Name', widthHeight = (200, 100) )
    cmds.columnLayout (adjustableColumn = True)
    cmds.text ("Fill the required inputs", align = 'center')
    cmds.textFieldGrp("leg_control",  label='Leg Control', tx = 'rt_foot_CTRL', ed = False)
    cmds.textFieldGrp("leg_ik",  label='Leg IK', tx = 'rt_leg_IK', ed = False)
    cmds.textFieldGrp("ball_ik",  label='Ball IK', tx = 'rt_ball_IK', ed = False)
    cmds.textFieldGrp("toe_ik",  label='Toe IK', tx = 'rt_toe_IK', ed =False)
    cmds.button(label = 'Get Heel Pivot Using Locator', height = 30, width = 100, command = addlocator)
    cmds.button(label = '<< Build The Reverse Foot >>', height = 30, width = 100, command = altreversefoot)
    cmds.button(label = 'Other foot', height = 30, width = 100, command = reversefootwindow)
    cmds.button( label='Close', command=('cmds.deleteUI(\"' + window2 + '\", window=True)') )
    cmds.showWindow (window2)
    return
    
def reversefootwindow(s):
    window1 = cmds.window(title = "Reverse Foot Setup" , iconName = 'Short Name', widthHeight = (200, 100) )
    cmds.columnLayout (adjustableColumn = True)
    cmds.text ("Fill the required inputs", align = 'center')
    cmds.textFieldGrp("leg_control",  label='Leg Control', tx = 'lf_foot_CTRL', ed = False)
    cmds.textFieldGrp("leg_ik",  label='Leg IK', tx = 'lf_leg_IK', ed = False)
    cmds.textFieldGrp("ball_ik",  label='Ball IK', tx = 'lf_ball_IK', ed = False)
    cmds.textFieldGrp("toe_ik",  label='Toe IK', tx = 'lf_toe_IK', ed =False)
    cmds.button(label = 'Get Heel Pivot Using Locator', height = 30, width = 100, command = addlocator)
    cmds.button(label = '<< Build The Reverse Foot >>', height = 30, width = 100, command = reversefoot)
    cmds.button(label = 'Other foot', height = 30, width = 100, command = altreversefootwindow)
    cmds.button( label='Close', command=('cmds.deleteUI(\"' + window1 + '\", window=True)') )
    cmds.showWindow (window1)
    return
    
def createkneepv(s):
    kneePos = cmds.xform ( 'lf_knee_JNT', q = True, ws = True, t = True) 
    cmds.curve (name = 'lf_knee_PV',d = 1, p=[(0, 1, 0),(0, 0, 1),(0, -1, 0),(0, 0, -1),(0, 1, 0),(-1, 0, 0),(0, -1, 0),(1, 0, 0),(0, 0, -1),(-1, 0, 0),(0, 0, 1),(1, 0, 0),(0, 1, 0)])
    cmds.select ('lf_knee_PV', r= True)
    cmds.move(kneePos[0], kneePos[1], kneePos[2])
    return

def kneepvconstrain(s):
    cmds.poleVectorConstraint( 'lf_knee_PV', 'lf_leg_IK' )
    cmds.poleVectorConstraint( 'rt_knee_PV', 'rt_leg_IK' )
    return

def duplicatefoot(s):
    anklePos = cmds.xform ( 'lf_ankle_JNT', q = True, ws = True, t = True) 
    anklePos1 = cmds.xform ( 'rt_ankle_JNT', q = True, ws = True, t = True) 
    cmds.duplicate('lf_foot_CTRL', name= 'rt_foot_CTRL')
    cmds.select('rt_foot_CTRL', r = True)
    x = cmds.getAttr('lf_foot_CTRL.scaleX')
    y = cmds.getAttr('lf_foot_CTRL.scaleY')
    z = cmds.getAttr('lf_foot_CTRL.scaleZ')
    cmds.scale(-x, y, z)
    cmds.move(anklePos1[0],anklePos1[1],anklePos1[2])
    cmds.setAttr('rt_foot_CTRL.translateY', 0 )
    cmds.select('lf_foot_CTRL', add = True)
    cmds.makeIdentity( apply=True )
    cmds.select('lf_foot_CTRL', r = True)
    cmds.move(anklePos[0],anklePos[1],anklePos[2], 'lf_foot_CTRL.scalePivot', 'lf_foot_CTRL.rotatePivot')
    cmds.select('rt_foot_CTRL', r = True)
    cmds.move(anklePos1[0],anklePos1[1],anklePos1[2], 'rt_foot_CTRL.scalePivot', 'rt_foot_CTRL.rotatePivot')
    return

def duplicateknee(s):
    kneePos = cmds.xform ( 'rt_knee_JNT', q = True, ws = True, t = True) 
    cmds.duplicate('lf_knee_PV', name= 'rt_knee_PV')
    cmds.select('rt_knee_PV', r = True)
    cmds.move(kneePos[0],kneePos[1],kneePos[2])
    cmds.select('lf_knee_PV', add = True)
    cmds.move (0,0,.5, r = True)
    cmds.makeIdentity( apply=True )
    return

def createroot(s):
    rootPos = cmds.xform ( 'root_JNT', q = True, ws = True, t = True) 
    cmds.circle(nr=(0,0,1), c = (0,0,0), name = 'root_CTRL')
    cmds.rotate(90,0,0)
    cmds.move(rootPos[0], rootPos[1], rootPos[2])
    cmds.makeIdentity( apply=True )
    
    cmds.circle(nr=(0,0,1), c = (0,0,0), name = 'pelvis_CTRL')
    cmds.rotate(90,0,0)
    cmds.move(rootPos[0], rootPos[1], rootPos[2])
    cmds.move(0,-.2,0, r =True)
    cmds.scale(.866,.866,.866)
    cmds.move (rootPos[0], rootPos[1], rootPos[2], 'pelvis_CTRL' + '.scalePivot', 'pelvis_CTRL' + '.rotatePivot')
    cmds.makeIdentity( apply=True )
    return

def createspinectrls(s):
    spinePos = cmds.xform ( 'spineA_JNT', q = True, ws = True, t = True) 
    cmds.curve (name = 'spine_01_CTRL', d = 1,p = [(0, 0, 0),(0, 2, 0),(0.523373, 2, 0),(0.456454, 2, -0.261686),(0.261686, 2,-0.456454),(0, 2, -0.523373),(-0.261686, 2, -0.456454),(-0.456454, 2, -0.261686),(-0.523373, 2, 0),(-0.456454, 2, 0.261686),(-0.261686, 2, 0.456454),(0, 2, 0.523373),(0.261686, 2, 0.456454),(0.456454, 2, 0.261686),(0.523373, 2, 0),(-0.523373, 2, 0),(0, 2, 0),(0, 2, -0.523373),(0, 2, 0.523373)])  
    cmds.select ('spine_01_CTRL.cv[1:18]', r=True)
    cmds.rotate (90, 0, 0, r= True, p = (0, 2, 0), os = True)
    cmds.select('spine_01_CTRL', r = True)
    cmds.rotate( -90,0,90)
    cmds.move(spinePos[0],spinePos[1],spinePos[2])
    
    spinePos = cmds.xform ( 'spineB_JNT', q = True, ws = True, t = True) 
    cmds.duplicate(name = 'spine_02_CTRL')
    cmds.move(spinePos[0],spinePos[1],spinePos[2])
    
    spinePos = cmds.xform ( 'spineC_JNT', q = True, ws = True, t = True) 
    cmds.duplicate(name = 'spine_03_CTRL')
    cmds.move(spinePos[0],spinePos[1],spinePos[2])
    
    spinePos = cmds.xform ( 'spineD_JNT', q = True, ws = True, t = True) 
    cmds.duplicate(name = 'spine_04_CTRL')
    cmds.move(spinePos[0],spinePos[1],spinePos[2])
    
    spinePos = cmds.xform ( 'neck_JNT', q = True, ws = True, t = True) 
    cmds.duplicate(name = 'neck_CTRL')
    cmds.move(spinePos[0],spinePos[1],spinePos[2])
    
    spinePos = cmds.xform ( 'head_JNT', q = True, ws = True, t = True) 
    cmds.duplicate(name = 'head_CTRL')
    cmds.move(spinePos[0],spinePos[1],spinePos[2])
    
    cmds.select('spine_01_CTRL', 'spine_02_CTRL', 'spine_03_CTRL', 'spine_04_CTRL', 'neck_CTRL', 'head_CTRL', r = True)
    cmds.scale(.4,.4,.4)
    cmds.makeIdentity(apply = True)  
    return

def parentbackctrls(s):
    cmds.select('root_CTRL', 'pelvis_CTRL', 'spine_01_CTRL', 'spine_02_CTRL', 'spine_03_CTRL', 'spine_04_CTRL', 'neck_CTRL', 'head_CTRL', r = True)
    cmds.makeIdentity(apply = True)
    cmds.parentConstraint('root_CTRL','root_JNT', mo = True)
    cmds.parentConstraint('pelvis_CTRL','pelvis_JNT', mo = True)
    cmds.parentConstraint('spine_01_CTRL','spineA_JNT', mo = True)
    cmds.parentConstraint('spine_02_CTRL','spineB_JNT', mo = True)
    cmds.parentConstraint('spine_03_CTRL','spineC_JNT', mo = True)
    cmds.parentConstraint('spine_04_CTRL','spineD_JNT', mo = True)
    cmds.parentConstraint('neck_CTRL','neck_JNT', mo = True)
    cmds.parentConstraint('head_CTRL','head_JNT', mo = True)
    cmds.parentConstraint('lf_clavicle_CTRL','lf_clavicle_JNT', mo = True)
    cmds.parentConstraint('rt_clavicle_CTRL','rt_clavicle_JNT', mo = True)
    cmds.parent('pelvis_CTRL', 'root_CTRL')
    cmds.parent('spine_01_CTRL', 'root_CTRL')
    cmds.parent('spine_02_CTRL', 'spine_01_CTRL')
    cmds.parent('spine_03_CTRL', 'spine_02_CTRL')
    cmds.parent('spine_04_CTRL', 'spine_03_CTRL')
    cmds.parent('neck_CTRL', 'spine_04_CTRL')
    cmds.parent('head_CTRL', 'neck_CTRL')
    return

def createikfkjnts(s):
    cmds.select('lf_shoulder_JNT', r = True)
    cmds.duplicate(name = 'ik_lf_shoulder_JNT')
    cmds.parent(w= True)
    cmds.pickWalk(d = 'down')
    cmds.rename('ik_lf_elbow_JNT')
    cmds.pickWalk(d = 'down')
    cmds.rename('ik_lf_wrist_JNT')
    cmds.pickWalk(d = 'down')
    cmds.delete()
    cmds.select('ik_lf_wrist_JNT')
    cmds.pickWalk(d = 'down')
    cmds.delete()
    
    cmds.select('ik_lf_shoulder_JNT')
    cmds.duplicate(name = 'fk_lf_shoulder_JNT')
    cmds.pickWalk(d='down')
    cmds.rename('fk_lf_elbow_JNT')
    cmds.pickWalk(d = 'down')
    cmds.rename('fk_lf_wrist_JNT')
    
    cmds.select('rt_shoulder_JNT', r = True)
    cmds.duplicate(name = 'ik_rt_shoulder_JNT')
    cmds.parent(w= True)
    cmds.pickWalk(d = 'down')
    cmds.rename('ik_rt_elbow_JNT')
    cmds.pickWalk(d = 'down')
    cmds.rename('ik_rt_wrist_JNT')
    cmds.pickWalk(d = 'down')
    cmds.delete()
    cmds.select('ik_rt_wrist_JNT')
    cmds.pickWalk(d = 'down')
    cmds.delete()
    
    cmds.select('ik_rt_shoulder_JNT')
    cmds.duplicate(name = 'fk_rt_shoulder_JNT')
    cmds.pickWalk(d='down')
    cmds.rename('fk_rt_elbow_JNT')
    cmds.pickWalk(d = 'down')
    cmds.rename('fk_rt_wrist_JNT')
    return
    
def createarmctrls(s):
    shoulderPos = cmds.xform('lf_shoulder_JNT', q = True, ws = True, t = True)
    cmds.circle(name = 'lf_shoulder_CTRL')
    
    cmds.rotate(90,0,0)
    cmds.select('lf_shoulder_CTRL.cv[0:7]')
    cmds.rotate(0, -35.767323, 0, rax = True) 
    cmds.select( 'lf_shoulder_CTRL', r = True)
    cmds.move(0, -0.15052, 0, 'lf_shoulder_CTRL.scalePivot', 'lf_shoulder_CTRL.rotatePivot', r = True) 
    cmds.rotate(90,0,90)
    
    
    cmds.move(shoulderPos[0] , shoulderPos[1] , shoulderPos[2])
    cmds.move(0, .15052, 0, r = True )
    elbowPos = cmds.xform('lf_elbow_JNT', q = True, ws = True, t = True)
    cmds.circle(nr=(0,0,1), c = (0,0,0), name = 'lf_elbow_CTRL')
    cmds.rotate(0,90,0)
    cmds.move(elbowPos[0], elbowPos[1], elbowPos[2])
    wristPos = cmds.xform('lf_wrist_JNT', q = True, ws = True, t = True)
    cmds.circle(nr=(0,0,1), c = (0,0,0), name = 'lf_wrist_CTRL')
    cmds.rotate(0,90,0)
    cmds.move(wristPos[0], wristPos[1], wristPos[2])
    return

def duplicatefkctrls(s):
    shoulderPos = cmds.xform('rt_shoulder_JNT', q = True, ws = True, t = True)
    cmds.select('lf_shoulder_CTRL', r =True)
    cmds.duplicate(name = 'rt_shoulder_CTRL')
    cmds.move(shoulderPos[0], shoulderPos[1], shoulderPos[2])
    x = cmds.getAttr('lf_shoulder_CTRL.scaleX')
    y = cmds.getAttr('lf_shoulder_CTRL.scaleY')
    z = cmds.getAttr('lf_shoulder_CTRL.scaleZ')
    cmds.scale(x, y, -z)
    cmds.move(0, .15052, 0, r = True )
    elbowPos = cmds.xform('rt_elbow_JNT', q = True, ws = True, t = True)
    cmds.select('lf_elbow_CTRL', r =True)
    cmds.duplicate(name = 'rt_elbow_CTRL')
    cmds.move(elbowPos[0], elbowPos[1], elbowPos[2])
    wristPos = cmds.xform('rt_wrist_JNT', q = True, ws = True, t = True)
    cmds.select('lf_wrist_CTRL', r =True)
    cmds.duplicate(name = 'rt_wrist_CTRL')
    cmds.move(wristPos[0], wristPos[1], wristPos[2])
    return
    
def constrainarmctrls(s):
    cmds.select('lf_shoulder_CTRL', 'lf_elbow_CTRL', 'lf_wrist_CTRL','rt_shoulder_CTRL', 'rt_elbow_CTRL', 'rt_wrist_CTRL', r = True)
    cmds.makeIdentity(apply = True)
    cmds.parentConstraint('lf_shoulder_CTRL', 'fk_lf_shoulder_JNT', mo = True)
    cmds.parentConstraint('lf_elbow_CTRL', 'fk_lf_elbow_JNT', mo = True)   
    cmds.parentConstraint('lf_wrist_CTRL', 'fk_lf_wrist_JNT', mo = True)
    cmds.parent('lf_wrist_CTRL', 'lf_elbow_CTRL')
    cmds.parent('lf_elbow_CTRL', 'lf_shoulder_CTRL')
    cmds.select('rt_shoulder_CTRL', 'rt_elbow_CTRL', 'rt_wrist_CTRL', r = True)
    cmds.makeIdentity(apply = True)
    cmds.parentConstraint('rt_shoulder_CTRL', 'fk_rt_shoulder_JNT', mo = True)
    cmds.parentConstraint('rt_elbow_CTRL', 'fk_rt_elbow_JNT', mo = True)   
    cmds.parentConstraint('rt_wrist_CTRL', 'fk_rt_wrist_JNT', mo = True)
    cmds.parent('rt_wrist_CTRL', 'rt_elbow_CTRL')
    cmds.parent('rt_elbow_CTRL', 'rt_shoulder_CTRL')
    return

def createarmik(s):
    cmds.ikHandle( name = 'lf_arm_IK', solver = 'ikRPsolver', sj = 'ik_lf_shoulder_JNT', ee = 'ik_lf_wrist_JNT')
    cmds.ikHandle( name = 'rt_arm_IK', solver = 'ikRPsolver', sj = 'ik_rt_shoulder_JNT', ee = 'ik_rt_wrist_JNT')
    return
    
def creatarmikctrls(s):
    elbowPos = cmds.xform ( 'lf_elbow_JNT', q = True, ws = True, t = True)
    wristPos = cmds.xform ( 'lf_wrist_JNT', q = True, ws = True, t = True) 
    cmds.curve (name = 'lf_elbow_PV',d = 1, p=[(0, 1, 0),(0, 0, 1),(0, -1, 0),(0, 0, -1),(0, 1, 0),(-1, 0, 0),(0, -1, 0),(1, 0, 0),(0, 0, -1),(-1, 0, 0),(0, 0, 1),(1, 0, 0),(0, 1, 0)])
    cmds.select ('lf_elbow_PV', r= True)
    cmds.move(elbowPos[0], elbowPos[1], elbowPos[2])
    cmds.curve(name = 'ik_lf_wrist_CTRL', d= 1, p=[ (0, 0, -1.1025),(-0.33, 0, -0.6075),(-0.165, 0, -0.6075),(-0.165, 0, -0.165),(-0.6075, 0, -0.165),(-0.6075, 0, -0.33),(-1.1025, 0, 0),(-0.6075, 0, 0.33),(-0.6075, 0, 0.165),(-0.165, 0, 0.165),(-0.165, 0, 0.6075),(-0.33, 0, 0.6075),(0, 0, 1.1025 ),(0.33, 0, 0.6075),(0.165, 0, 0.6075),(0.165, 0, 0.165),(0.6075, 0, 0.165),(0.6075, 0, 0.33),(1.1025, 0, 0),(0.6075, 0, -0.33),(0.6075, 0, -0.165),(0.165, 0, -0.165),(0.165, 0, -0.6075),(0.33, 0, -0.6075),(0, 0, -1.1025)])
    cmds.move(wristPos[0], wristPos[1], wristPos[2])
    cmds.rotate(0,0,90)
    return
    
def duplicateikctrls(s):
    elbowPos = cmds.xform ( 'rt_elbow_JNT', q = True, ws = True, t = True)
    wristPos = cmds.xform ( 'rt_wrist_JNT', q = True, ws = True, t = True) 
    cmds.select ('lf_elbow_PV', r= True)
    cmds.duplicate(name = 'rt_elbow_PV')
    cmds.move(elbowPos[0], elbowPos[1], elbowPos[2])
    cmds.select('lf_elbow_PV', add = True)
    cmds.move(0,0,-1, r = True)
    cmds.makeIdentity(apply = True)
    cmds.select('ik_lf_wrist_CTRL', r = True)
    cmds.duplicate(name = 'ik_rt_wrist_CTRL')
    cmds.move(wristPos[0], wristPos[1], wristPos[2])
    cmds.select('ik_lf_wrist_CTRL', add= True)
    cmds.makeIdentity(apply = True)
    return
    
def constrainikctrls(s):
    cmds.parentConstraint('ik_lf_wrist_CTRL', 'lf_arm_IK', mo  = True)
    cmds.parentConstraint('ik_rt_wrist_CTRL', 'rt_arm_IK', mo  = True)
    cmds.poleVectorConstraint( 'lf_elbow_PV', 'lf_arm_IK')
    cmds.poleVectorConstraint( 'rt_elbow_PV', 'rt_arm_IK')
    cmds.orientConstraint('ik_lf_wrist_CTRL', 'ik_lf_wrist_JNT')
    cmds.orientConstraint('ik_rt_wrist_CTRL', 'ik_rt_wrist_JNT')
    return
    
def createikfk(s):
    wristPos = cmds.xform('lf_wrist_JNT', q = True, ws = True, t = True)
    cmds.file (ik_fk_ctrl_location, i = True)
    cmds.select('lf_IKFKSwitch_CTRL', r = True)
    cmds.deleteAttr('lf_IKFKSwitchNull_GRP|lf_IKFKSwitch_CTRL.lf_IK_FK_switch')
    cmds.addAttr(longName = 'IK_FK_switch', defaultValue = 0, minValue =0, maxValue = 1, k = True)
    cmds.select ('lf_IKFKSwitchNull_GRP', r = True)
    cmds.move(wristPos[0], wristPos[1], wristPos[2])
    cmds.scale(.076,.076,.076)
    cmds.move(.1,.7,-.257, r = True)
    cmds.rotate(90,-54, -90)
    cmds.move (wristPos[0], wristPos[1], wristPos[2], 'lf_IKFKSwitchNull_GRP' + '.scalePivot', 'lf_IKFKSwitchNull_GRP' + '.rotatePivot')
    
    
    cmds.duplicate(name = 'rt_IKFKSwitchNull_GRP')
    wristPos = cmds.xform('rt_wrist_JNT', q = True, ws = True, t = True)
    cmds.move(wristPos[0] + .1, wristPos[1] + .7, wristPos[2] -.257)
    cmds.pickWalk(d = 'down')
    cmds.rename( 'rt_IKFKSwitch_CTRL')
    
    cmds.pickWalk(d = 'down')
    cmds.pickWalk(d = 'right')
    cmds.rename('rt_IK_TXT')
    cmds.pickWalk(d = 'right')
    cmds.rename('rt_FK_TXT')
    return

def setikfk(s):
    cmds.select('rt_IKFKSwitchNull_GRP','lf_IKFKSwitchNull_GRP', r= True)
    cmds.makeIdentity(apply = True)
    cmds.parentConstraint( 'ik_lf_shoulder_JNT', 'fk_lf_shoulder_JNT', 'lf_shoulder_JNT', mo = True)
    cmds.parentConstraint( 'ik_lf_elbow_JNT', 'fk_lf_elbow_JNT', 'lf_elbow_JNT', mo = True)
    cmds.parentConstraint( 'ik_lf_wrist_JNT', 'fk_lf_wrist_JNT', 'lf_wrist_JNT', mo = True)
    cmds.parentConstraint( 'ik_rt_shoulder_JNT', 'fk_rt_shoulder_JNT', 'rt_shoulder_JNT', mo = True)
    cmds.parentConstraint( 'ik_rt_elbow_JNT', 'fk_rt_elbow_JNT', 'rt_elbow_JNT', mo = True)
    cmds.parentConstraint( 'ik_rt_wrist_JNT', 'fk_rt_wrist_JNT', 'rt_wrist_JNT', mo = True)
    cmds.setAttr('lf_wrist_JNT_parentConstraint1.fk_lf_wrist_JNTW1', 0 )
    cmds.setDrivenKeyframe('lf_wrist_JNT_parentConstraint1.ik_lf_wrist_JNTW0', cd='lf_IKFKSwitchNull_GRP|lf_IKFKSwitch_CTRL.IK_FK_switch')
    cmds.setDrivenKeyframe('lf_wrist_JNT_parentConstraint1.fk_lf_wrist_JNTW1', cd='lf_IKFKSwitchNull_GRP|lf_IKFKSwitch_CTRL.IK_FK_switch')
    cmds.setAttr('lf_elbow_JNT_parentConstraint1.fk_lf_elbow_JNTW1', 0 )
    cmds.setDrivenKeyframe('lf_elbow_JNT_parentConstraint1.ik_lf_elbow_JNTW0', cd='lf_IKFKSwitchNull_GRP|lf_IKFKSwitch_CTRL.IK_FK_switch')
    cmds.setDrivenKeyframe('lf_elbow_JNT_parentConstraint1.fk_lf_elbow_JNTW1', cd='lf_IKFKSwitchNull_GRP|lf_IKFKSwitch_CTRL.IK_FK_switch')
    cmds.setAttr('lf_shoulder_JNT_parentConstraint1.fk_lf_shoulder_JNTW1', 0 )
    cmds.setDrivenKeyframe('lf_shoulder_JNT_parentConstraint1.ik_lf_shoulder_JNTW0', cd='lf_IKFKSwitchNull_GRP|lf_IKFKSwitch_CTRL.IK_FK_switch')
    cmds.setDrivenKeyframe('lf_shoulder_JNT_parentConstraint1.fk_lf_shoulder_JNTW1', cd='lf_IKFKSwitchNull_GRP|lf_IKFKSwitch_CTRL.IK_FK_switch')
    cmds.setAttr('lf_IKFKSwitchNull_GRP|lf_IKFKSwitch_CTRL.IK_FK_switch', 1 )
    cmds.setAttr('lf_wrist_JNT_parentConstraint1.fk_lf_wrist_JNTW1', 1 )
    cmds.setAttr('lf_wrist_JNT_parentConstraint1.ik_lf_wrist_JNTW0', 0 )
    cmds.setDrivenKeyframe('lf_wrist_JNT_parentConstraint1.ik_lf_wrist_JNTW0', cd='lf_IKFKSwitchNull_GRP|lf_IKFKSwitch_CTRL.IK_FK_switch')
    cmds.setDrivenKeyframe('lf_wrist_JNT_parentConstraint1.fk_lf_wrist_JNTW1', cd='lf_IKFKSwitchNull_GRP|lf_IKFKSwitch_CTRL.IK_FK_switch')
    cmds.setAttr('lf_elbow_JNT_parentConstraint1.fk_lf_elbow_JNTW1', 1 )
    cmds.setAttr('lf_elbow_JNT_parentConstraint1.ik_lf_elbow_JNTW0', 0 )
    cmds.setDrivenKeyframe('lf_elbow_JNT_parentConstraint1.ik_lf_elbow_JNTW0', cd='lf_IKFKSwitchNull_GRP|lf_IKFKSwitch_CTRL.IK_FK_switch')
    cmds.setDrivenKeyframe('lf_elbow_JNT_parentConstraint1.fk_lf_elbow_JNTW1', cd='lf_IKFKSwitchNull_GRP|lf_IKFKSwitch_CTRL.IK_FK_switch')
    cmds.setAttr('lf_shoulder_JNT_parentConstraint1.fk_lf_shoulder_JNTW1', 1 )
    cmds.setAttr('lf_shoulder_JNT_parentConstraint1.ik_lf_shoulder_JNTW0', 0 )
    cmds.setDrivenKeyframe('lf_shoulder_JNT_parentConstraint1.ik_lf_shoulder_JNTW0', cd='lf_IKFKSwitchNull_GRP|lf_IKFKSwitch_CTRL.IK_FK_switch')
    cmds.setDrivenKeyframe('lf_shoulder_JNT_parentConstraint1.fk_lf_shoulder_JNTW1', cd='lf_IKFKSwitchNull_GRP|lf_IKFKSwitch_CTRL.IK_FK_switch')
    cmds.setAttr('rt_wrist_JNT_parentConstraint1.fk_rt_wrist_JNTW1', 0 )
    cmds.setDrivenKeyframe('rt_wrist_JNT_parentConstraint1.ik_rt_wrist_JNTW0', cd='rt_IKFKSwitchNull_GRP|rt_IKFKSwitch_CTRL.IK_FK_switch')
    cmds.setDrivenKeyframe('rt_wrist_JNT_parentConstraint1.fk_rt_wrist_JNTW1', cd='rt_IKFKSwitchNull_GRP|rt_IKFKSwitch_CTRL.IK_FK_switch')
    cmds.setAttr('rt_elbow_JNT_parentConstraint1.fk_rt_elbow_JNTW1', 0 )
    cmds.setDrivenKeyframe('rt_elbow_JNT_parentConstraint1.ik_rt_elbow_JNTW0', cd='rt_IKFKSwitchNull_GRP|rt_IKFKSwitch_CTRL.IK_FK_switch')
    cmds.setDrivenKeyframe('rt_elbow_JNT_parentConstraint1.fk_rt_elbow_JNTW1', cd='rt_IKFKSwitchNull_GRP|rt_IKFKSwitch_CTRL.IK_FK_switch')
    cmds.setAttr('rt_shoulder_JNT_parentConstraint1.fk_rt_shoulder_JNTW1', 0 )
    cmds.setDrivenKeyframe('rt_shoulder_JNT_parentConstraint1.ik_rt_shoulder_JNTW0', cd='rt_IKFKSwitchNull_GRP|rt_IKFKSwitch_CTRL.IK_FK_switch')
    cmds.setDrivenKeyframe('rt_shoulder_JNT_parentConstraint1.fk_rt_shoulder_JNTW1', cd='rt_IKFKSwitchNull_GRP|rt_IKFKSwitch_CTRL.IK_FK_switch')
    cmds.setAttr('rt_IKFKSwitchNull_GRP|rt_IKFKSwitch_CTRL.IK_FK_switch', 1 )
    cmds.setAttr('rt_wrist_JNT_parentConstraint1.fk_rt_wrist_JNTW1', 1 )
    cmds.setAttr('rt_wrist_JNT_parentConstraint1.ik_rt_wrist_JNTW0', 0 )
    cmds.setDrivenKeyframe('rt_wrist_JNT_parentConstraint1.ik_rt_wrist_JNTW0', cd='rt_IKFKSwitchNull_GRP|rt_IKFKSwitch_CTRL.IK_FK_switch')
    cmds.setDrivenKeyframe('rt_wrist_JNT_parentConstraint1.fk_rt_wrist_JNTW1', cd='rt_IKFKSwitchNull_GRP|rt_IKFKSwitch_CTRL.IK_FK_switch')
    cmds.setAttr('rt_elbow_JNT_parentConstraint1.fk_rt_elbow_JNTW1', 1 )
    cmds.setAttr('rt_elbow_JNT_parentConstraint1.ik_rt_elbow_JNTW0', 0 )
    cmds.setDrivenKeyframe('rt_elbow_JNT_parentConstraint1.ik_rt_elbow_JNTW0', cd='rt_IKFKSwitchNull_GRP|rt_IKFKSwitch_CTRL.IK_FK_switch')
    cmds.setDrivenKeyframe('rt_elbow_JNT_parentConstraint1.fk_rt_elbow_JNTW1', cd='rt_IKFKSwitchNull_GRP|rt_IKFKSwitch_CTRL.IK_FK_switch')
    cmds.setAttr('rt_shoulder_JNT_parentConstraint1.fk_rt_shoulder_JNTW1', 1 )
    cmds.setAttr('rt_shoulder_JNT_parentConstraint1.ik_rt_shoulder_JNTW0', 0 )
    cmds.setDrivenKeyframe('rt_shoulder_JNT_parentConstraint1.ik_rt_shoulder_JNTW0', cd='rt_IKFKSwitchNull_GRP|rt_IKFKSwitch_CTRL.IK_FK_switch')
    cmds.setDrivenKeyframe('rt_shoulder_JNT_parentConstraint1.fk_rt_shoulder_JNTW1', cd='rt_IKFKSwitchNull_GRP|rt_IKFKSwitch_CTRL.IK_FK_switch') 
    cmds.parentConstraint('lf_wrist_JNT','lf_IKFKSwitchNull_GRP', mo =True)
    cmds.parentConstraint('rt_wrist_JNT','rt_IKFKSwitchNull_GRP', mo =True)
    cmds.setAttr('lf_IKFKSwitch_CTRL.IK_FK_switch', 1 )
    cmds.setAttr('lf_elbow_PV.visibility', 0 )
    cmds.setAttr('ik_lf_wrist_CTRL.visibility', 0 )
    cmds.setAttr('lf_IKFKSwitch_CTRL|lf_IK_TXT.visibility', 0 )
    cmds.setAttr('lf_IKFKSwitch_CTRL|lf_FK_TXT.visibility', 1 )
    cmds.setDrivenKeyframe('lf_elbow_PV.visibility', cd='lf_IKFKSwitch_CTRL.IK_FK_switch')
    cmds.setDrivenKeyframe('ik_lf_wrist_CTRL.visibility', cd='lf_IKFKSwitch_CTRL.IK_FK_switch')
    cmds.setDrivenKeyframe('lf_shoulder_CTRL.visibility', cd='lf_IKFKSwitch_CTRL.IK_FK_switch')
    cmds.setDrivenKeyframe('lf_IKFKSwitch_CTRL|lf_IK_TXT.visibility', cd='lf_IKFKSwitch_CTRL.IK_FK_switch')
    cmds.setDrivenKeyframe('lf_IKFKSwitch_CTRL|lf_FK_TXT.visibility', cd='lf_IKFKSwitch_CTRL.IK_FK_switch')
    cmds.setAttr('lf_IKFKSwitch_CTRL.IK_FK_switch', 0 )
    cmds.setAttr('lf_elbow_PV.visibility', 1 )
    cmds.setAttr('ik_lf_wrist_CTRL.visibility', 1 )
    cmds.setAttr('lf_shoulder_CTRL.visibility', 0 )
    cmds.setAttr('lf_IKFKSwitch_CTRL|lf_IK_TXT.visibility', 1 )
    cmds.setAttr('lf_IKFKSwitch_CTRL|lf_FK_TXT.visibility', 0 )
    cmds.setDrivenKeyframe('lf_elbow_PV.visibility', cd='lf_IKFKSwitch_CTRL.IK_FK_switch')
    cmds.setDrivenKeyframe('ik_lf_wrist_CTRL.visibility', cd='lf_IKFKSwitch_CTRL.IK_FK_switch')
    cmds.setDrivenKeyframe('lf_shoulder_CTRL.visibility', cd='lf_IKFKSwitch_CTRL.IK_FK_switch')
    cmds.setDrivenKeyframe('lf_IKFKSwitch_CTRL|lf_IK_TXT.visibility', cd='lf_IKFKSwitch_CTRL.IK_FK_switch')
    cmds.setDrivenKeyframe('lf_IKFKSwitch_CTRL|lf_FK_TXT.visibility', cd='lf_IKFKSwitch_CTRL.IK_FK_switch')
    cmds.setAttr('rt_IKFKSwitch_CTRL.IK_FK_switch', 1 )
    cmds.setAttr('rt_elbow_PV.visibility', 0 )
    cmds.setAttr('ik_rt_wrist_CTRL.visibility', 0 )
    cmds.setAttr('rt_IKFKSwitch_CTRL|rt_IK_TXT.visibility', 0 )
    cmds.setAttr('rt_IKFKSwitch_CTRL|rt_FK_TXT.visibility', 1 )
    cmds.setDrivenKeyframe('rt_elbow_PV.visibility', cd='rt_IKFKSwitch_CTRL.IK_FK_switch')
    cmds.setDrivenKeyframe('ik_rt_wrist_CTRL.visibility', cd='rt_IKFKSwitch_CTRL.IK_FK_switch')
    cmds.setDrivenKeyframe('rt_shoulder_CTRL.visibility', cd='rt_IKFKSwitch_CTRL.IK_FK_switch')
    cmds.setDrivenKeyframe('rt_IKFKSwitch_CTRL|rt_IK_TXT.visibility', cd='rt_IKFKSwitch_CTRL.IK_FK_switch')
    cmds.setDrivenKeyframe('rt_IKFKSwitch_CTRL|rt_FK_TXT.visibility', cd='rt_IKFKSwitch_CTRL.IK_FK_switch')
    cmds.setAttr('rt_IKFKSwitch_CTRL.IK_FK_switch', 0 )
    cmds.setAttr('rt_elbow_PV.visibility', 1 )
    cmds.setAttr('ik_rt_wrist_CTRL.visibility', 1 )
    cmds.setAttr('rt_shoulder_CTRL.visibility', 0 )
    cmds.setAttr('rt_IKFKSwitch_CTRL|rt_IK_TXT.visibility', 1 )
    cmds.setAttr('rt_IKFKSwitch_CTRL|rt_FK_TXT.visibility', 0 )
    cmds.setDrivenKeyframe('rt_elbow_PV.visibility', cd='rt_IKFKSwitch_CTRL.IK_FK_switch')
    cmds.setDrivenKeyframe('ik_rt_wrist_CTRL.visibility', cd='rt_IKFKSwitch_CTRL.IK_FK_switch')
    cmds.setDrivenKeyframe('rt_shoulder_CTRL.visibility', cd='rt_IKFKSwitch_CTRL.IK_FK_switch')
    cmds.setDrivenKeyframe('rt_IKFKSwitch_CTRL|rt_IK_TXT.visibility', cd='rt_IKFKSwitch_CTRL.IK_FK_switch')
    cmds.setDrivenKeyframe('rt_IKFKSwitch_CTRL|rt_FK_TXT.visibility', cd='rt_IKFKSwitch_CTRL.IK_FK_switch')
    return
def createhandctrls(s):
    wristPos = cmds.xform('rt_wrist_JNT', q = True, ws = True, t = True)
    cmds.curve(name = 'rt_palm_CTRL', d = 1, p = [(.05,0,0), (.95,0,0), (.98, .02, 0), (1,.05,0), (1,.95,0),(.98,.98,0),(.95,1,0), (.05,1,0),(.02,.98,0),(0,.95,0), (0,.05,0),(.02,.02,0),(.05,0,0)])
    cmds.curve(name = 'rt_thumb_CTRL', d = 1, p = [(1,.1,0), (1.4,.4,0), (1.4, 1.38,0), (1.38,1.4,0), (1.18, 1.4,0),(1.16,1.38,0),(1.16,.75,0),(1.08,.65,0),(1,.6,0)])
    cmds.curve(name = 'rt_pinky_CTRL', d = 1, p = [(0,0,0),(0,.7,0),(.02,.73,0),(.05, .75,0),(.15,.75,0),(.18,.73,0),(.2,.7,0),(.2,0,0)])
    cmds.curve(name = 'rt_ring_CTRL', d = 1, p = [(0,0,0),(0,.8,0),(.02,.83,0),(.05, .85,0),(.15,.85,0),(.18,.83,0),(.2,.8,0),(.2,0,0)])
    cmds.curve(name = 'rt_mid_CTRL', d = 1, p = [(0,0,0),(0,.9,0),(.02,.93,0),(.05, .95,0),(.15,.95,0),(.18,.93,0),(.2,.9,0),(.2,0,0)])
    cmds.curve(name = 'rt_index_CTRL', d = 1, p = [(0,0,0),(0,.75,0),(.02,.78,0),(.05, .8,0),(.15,.8,0),(.18,.78,0),(.2,.75,0),(.2,0,0)])
    cmds.select('rt_index_CTRL', 'rt_pinky_CTRL', 'rt_ring_CTRL', 'rt_mid_CTRL', r = True)
    cmds.move (0,1,0)
    cmds.select('rt_ring_CTRL', r = True)
    cmds.move(.25,0,0,r = True)
    cmds.select('rt_mid_CTRL', r = True)
    cmds.move(.5,0,0,r = True)
    cmds.select('rt_index_CTRL', r = True)
    cmds.move(.75,0,0,r = True)
    
    cmds.select('rt_index_CTRL', 'rt_pinky_CTRL', 'rt_ring_CTRL', 'rt_mid_CTRL', 'rt_palm_CTRL', 'rt_thumb_CTRL', r = True)
    selection = cmds.ls(sl = True, sn = True)
    i = 1
    for each in selection:
        cmds.setAttr((each + '.tx'), lock= True, keyable= False, channelBox =False )
        cmds.setAttr((each + '.ty'), lock= True, keyable= False, channelBox =False) 
        cmds.setAttr((each + '.tz'), lock= True, keyable= False, channelBox =False )
        cmds.setAttr((each + '.rx'), lock= True, keyable= False, channelBox =False )
        cmds.setAttr((each + '.ry'), lock= True, keyable= False, channelBox =False )
        cmds.setAttr((each + '.rz'), lock= True, keyable= False, channelBox =False )
        cmds.setAttr((each + '.sx'), lock= True, keyable= False, channelBox =False )
        cmds.setAttr((each + '.sy'), lock= True, keyable= False, channelBox =False )
        cmds.setAttr((each + '.sz'), lock= True, keyable= False, channelBox =False )
        cmds.setAttr((each + '.visibility'), lock= True, keyable= False, channelBox =False )
    
    cmds.select('rt_index_CTRL', 'rt_pinky_CTRL', 'rt_ring_CTRL', 'rt_mid_CTRL','rt_thumb_CTRL',r = True)
    cmds.addAttr(shortName = 'base', defaultValue=0, minValue=-10, maxValue=10, keyable = True )
    cmds.addAttr(shortName = 'mid', defaultValue=0, minValue=-10, maxValue=10, keyable = True  )
    cmds.addAttr(shortName = 'tip', defaultValue=0, minValue=-10, maxValue=10, keyable = True  )
    cmds.addAttr(shortName = 'spread', defaultValue=0, minValue=-10, maxValue=10, keyable = True  )
    cmds.addAttr(shortName = 'twist', defaultValue=0, minValue=-10, maxValue=10, keyable = True  )
    
    cmds.select('rt_palm_CTRL', r = True)
    cmds.addAttr(shortName = 'palm_bend', defaultValue=0, minValue=-10, maxValue=10, keyable = True )
    cmds.addAttr(shortName = 'palm_lf_cup', defaultValue=0, minValue=-10, maxValue=10, keyable = True  )
    cmds.addAttr(shortName = 'palm_rt_cup', defaultValue=0, minValue=-10, maxValue=10, keyable = True  )
    
    cmds.select('rt_index_CTRL', 'rt_pinky_CTRL', 'rt_ring_CTRL', 'rt_mid_CTRL', 'rt_palm_CTRL', 'rt_thumb_CTRL', r = True)
        
    cmds.group(name = 'rt_hand_null_CTRL')
    cmds.select('rt_hand_null_CTRL')
    cmds.move (wristPos[0], wristPos[1], wristPos[2])
    cmds.move(-0.670958, 0, 0, r = True)
    cmds.duplicate(name = 'lf_hand_null_CTRL')
    wristPos = cmds.xform('lf_wrist_JNT', q = True, ws = True, t = True)
    cmds.rotate(0,180,0)
    cmds.move (wristPos[0], wristPos[1], wristPos[2])
    cmds.move(-0.589854, 0, 0, r = True)
    cmds.select('lf_hand_null_CTRL|rt_ring_CTRL')
    cmds.rename('lf_ring_CTRL')
    cmds.select('lf_hand_null_CTRL|rt_pinky_CTRL')
    cmds.rename('lf_pinky_CTRL')
    cmds.select('lf_hand_null_CTRL|rt_index_CTRL')
    cmds.rename('lf_index_CTRL')
    cmds.select('lf_hand_null_CTRL|rt_mid_CTRL')
    cmds.rename('lf_mid_CTRL')
    cmds.select('lf_hand_null_CTRL|rt_palm_CTRL')
    cmds.rename('lf_palm_CTRL')
    cmds.select('lf_hand_null_CTRL|rt_thumb_CTRL')
    cmds.rename('lf_thumb_CTRL')
    cmds.select('lf_hand_null_CTRL', 'rt_hand_null_CTRL', r = True)
    cmds.move(0,0.221,0, r = True)
    cmds.parentConstraint('lf_wrist_JNT', 'lf_hand_null_CTRL', mo = True)
    cmds.parentConstraint('rt_wrist_JNT', 'rt_hand_null_CTRL', mo = True)
    cmds.expression(s = "rt_pinky1_JNT.rotateZ = rt_pinky_CTRL.base * 12;\nrt_pinky2_JNT.rotateZ = rt_pinky_CTRL.mid * 12;\nrt_pinky3_JNT.rotateZ = rt_pinky_CTRL.tip * 12;\nrt_pinky1_JNT.rotateY = rt_pinky_CTRL.spread * -8;\nrt_pinky1_JNT.rotateX = rt_pinky_CTRL.twist * 12;\n\nrt_mid1_JNT.rotateZ = rt_mid_CTRL.base * 12;\nrt_mid2_JNT.rotateZ = rt_mid_CTRL.mid * 12;\nrt_mid3_JNT.rotateZ = rt_mid_CTRL.tip * 12;\nrt_mid1_JNT.rotateY = rt_mid_CTRL.spread * -8;\nrt_mid1_JNT.rotateX = rt_mid_CTRL.twist * 12;\n\nrt_ring1_JNT.rotateZ = rt_ring_CTRL.base * 12;\nrt_ring2_JNT.rotateZ = rt_ring_CTRL.mid * 12;\nrt_ring3_JNT.rotateZ = rt_ring_CTRL.tip * 12;\nrt_ring1_JNT.rotateY = rt_ring_CTRL.spread * -8;\nrt_ring1_JNT.rotateX = rt_ring_CTRL.twist * 12;\n\nrt_index1_JNT.rotateZ = rt_index_CTRL.base * 12;\nrt_index2_JNT.rotateZ = rt_index_CTRL.mid * 12;\nrt_index3_JNT.rotateZ = rt_index_CTRL.tip * 12;\nrt_index1_JNT.rotateY = rt_index_CTRL.spread * -8;\nrt_index1_JNT.rotateX = rt_index_CTRL.twist * 12;\n\nrt_thumb1_JNT.rotateZ = rt_thumb_CTRL.base * 12;\nrt_thumb2_JNT.rotateZ = rt_thumb_CTRL.mid * 12;\nrt_thumb3_JNT.rotateZ = rt_thumb_CTRL.tip * 12;\nrt_thumb1_JNT.rotateY = rt_thumb_CTRL.spread * -8;\nrt_thumb1_JNT.rotateX = rt_thumb_CTRL.twist * 12;\n\nrt_palm_JNT.rotateX = rt_palm_CTRL.palm_bend * 12;\nrt_palm1_JNT.rotateX = rt_palm_CTRL.palm_lf_cup *-12;\nrt_palm2_JNT.rotateX = rt_palm_CTRL.palm_rt_cup *12;\n\nlf_pinky1_JNT.rotateZ = lf_pinky_CTRL.base * 12;\nlf_pinky2_JNT.rotateZ = lf_pinky_CTRL.mid * 12;\nlf_pinky3_JNT.rotateZ = lf_pinky_CTRL.tip * 12;\nlf_pinky1_JNT.rotateY = lf_pinky_CTRL.spread * -8;\nlf_pinky1_JNT.rotateX = lf_pinky_CTRL.twist * 12;\n\nlf_mid1_JNT.rotateZ = lf_mid_CTRL.base * 12;\nlf_mid2_JNT.rotateZ = lf_mid_CTRL.mid * 12;\nlf_mid3_JNT.rotateZ = lf_mid_CTRL.tip * 12;\nlf_mid1_JNT.rotateY = lf_mid_CTRL.spread * -8;\nlf_mid1_JNT.rotateX = lf_mid_CTRL.twist * 12;\n\nlf_ring1_JNT.rotateZ = lf_ring_CTRL.base * 12;\nlf_ring2_JNT.rotateZ = lf_ring_CTRL.mid * 12;\nlf_ring3_JNT.rotateZ = lf_ring_CTRL.tip * 12;\nlf_ring1_JNT.rotateY = lf_ring_CTRL.spread * -8;\nlf_ring1_JNT.rotateX = lf_ring_CTRL.twist * 12;\n\nlf_index1_JNT.rotateZ = lf_index_CTRL.base * 12;\nlf_index2_JNT.rotateZ = lf_index_CTRL.mid * 12;\nlf_index3_JNT.rotateZ = lf_index_CTRL.tip * 12;\nlf_index1_JNT.rotateY = lf_index_CTRL.spread * -8;\nlf_index1_JNT.rotateX = lf_index_CTRL.twist * 12;\nlf_thumb1_JNT.rotateZ = lf_thumb_CTRL.base * 12;\nlf_thumb2_JNT.rotateZ = lf_thumb_CTRL.mid * 12;\nlf_thumb3_JNT.rotateZ = lf_thumb_CTRL.tip * 12;\nlf_thumb1_JNT.rotateY = lf_thumb_CTRL.spread * -8;\nlf_thumb1_JNT.rotateX = lf_thumb_CTRL.twist * 12;\n\nlf_palm_JNT.rotateX = lf_palm_CTRL.palm_bend * 12;\nlf_palm1_JNT.rotateX = lf_palm_CTRL.palm_lf_cup *-12;\nlf_palm2_JNT.rotateX = lf_palm_CTRL.palm_rt_cup *12;",  o = ' ', n = 'handexpressions', ae = 1, uc = 'all')

    return

def createclavctrls(s):
    clavPos = cmds.xform ( 'lf_clavicle_JNT', q = True, ws = True, t = True)
    cmds.curve(name = 'lf_clavicle_CTRL', d= 1, p =[(-1.006886, 1.49012e-008, 0),(-0.516551, 0.172148, -0.221053),(-0.405637, 0.169131, -0.405637),(-0.221053, 0.172148, -0.516551),(0, 1.49012e-008, -1.006886),(0.221053, 0.172148, -0.516551),(0.405637, 0.169131, -0.405637),(0.516551, 0.172148, -0.221053),(1.006886, 1.49012e-008, 0),(0.516551, 0.172148, 0.221053),(0.405637, 0.169131, 0.405637),(0.221053, 0.172148, 0.516551),(-1.13828e-008, 1.49012e-008, 1.006886),(-0.221053, 0.172148,0.516551),(-0.405637, 0.169131, 0.405637),(-0.516551, 0.172148, 0.221053),(-1.006886, 1.49012e-008, 0),(-0.516551, 0.172148, -0.221053),(-0.553504, 0.174323, 0),(-0.516551, 0.172148, 0.221053),(-0.258513, 0.226917, 0.258513),(0, 0.250032, 0.276752),(0.258513, 0.226917, 0.258513),(0.516551, 0.172148, 0.221053),(0.553504, 0.174323, 0),(0.516551, 0.172148, -0.221053),(0.258513, 0.226917, -0.258513),(0, 0.250032, -0.276752),(-0.258513, 0.226917, -0.258513),(-0.516551, 0.172148, -0.221053),(-0.405637, 0.169131, -0.405637),(-0.221053, 0.172148, -0.516551),(0, 0.174323, -0.553504),(0.221053, 0.172148, -0.516551),(0.258513, 0.226917, -0.258513),(0.276752, 0.250032, 0),(0.258513, 0.226917, 0.258513),(0.221053, 0.172148, 0.516551),(0, 0.174323, 0.553504),(-0.221053, 0.172148, 0.516551),(-0.258513, 0.226917, 0.258513),(-0.276752, 0.250032, 0),(-0.258513, 0.226917, -0.258513),(-0.221053, 0.172148, -0.516551)]) 
    cmds.select('lf_clavicle_CTRL', r = True)
    cmds.move(clavPos[0],clavPos[1],clavPos[2])
    return
    
def duplicateclavctrls(s):
    clavPos = cmds.xform ( 'rt_clavicle_JNT', q = True, ws = True, t = True) 
    clavPos1 = cmds.xform ( 'lf_clavicle_JNT', q = True, ws = True, t = True) 
    cmds.duplicate('lf_clavicle_CTRL', name= 'rt_clavicle_CTRL')
    cmds.select('rt_clavicle_CTRL', r = True)
    cmds.move(clavPos[0],clavPos[1],clavPos[2])
    cmds.select('lf_clavicle_CTRL', add = True)
    cmds.move(0,.25,0, r = True)
    cmds.makeIdentity( apply=True )
    cmds.select('lf_clavicle_CTRL', r = True)
    cmds.move(clavPos1[0],clavPos1[1],clavPos1[2], 'lf_clavicle_CTRL.scalePivot', 'lf_clavicle_CTRL.rotatePivot')
    cmds.select('rt_clavicle_CTRL', r = True)
    cmds.move(clavPos[0],clavPos[1],clavPos[2], 'rt_clavicle_CTRL.scalePivot', 'rt_clavicle_CTRL.rotatePivot')
    return
    
def groupclavctrls(s):
    cmds.select('lf_clavicle_CTRL', r = True)
    cmds.group(name = 'lf_clavicle_null_GRP')
    cmds.parentConstraint('spineC_JNT', 'lf_clavicle_null_GRP', mo = True)
    cmds.select('rt_clavicle_CTRL', r = True)
    cmds.group(name = 'rt_clavicle_null_GRP')
    cmds.parentConstraint('spineC_JNT', 'rt_clavicle_null_GRP', mo = True)
    return
    
def parentikfkctrls(s):
    cmds.parentConstraint('lf_clavicle_JNT', 'ik_lf_shoulder_JNT', mo = True)
    cmds.parentConstraint('rt_clavicle_JNT', 'ik_rt_shoulder_JNT', mo = True)
    cmds.select('lf_shoulder_CTRL', r = True)
    cmds.group(name = 'lf_fk_arm_null_GRP')
    cmds.select('rt_shoulder_CTRL', r = True)
    cmds.group(name = 'rt_fk_arm_null_GRP')
    cmds.parentConstraint('lf_clavicle_JNT', 'lf_fk_arm_null_GRP', mo = True)
    cmds.parentConstraint('rt_clavicle_JNT', 'rt_fk_arm_null_GRP', mo = True)
    
    cmds.parentConstraint('pelvis_JNT', 'ik_lf_hip_JNT', mo = True)
    cmds.parentConstraint('pelvis_JNT', 'ik_rt_hip_JNT', mo = True)
    cmds.select('lf_hip_CTRL', r = True)
    cmds.group(name = 'lf_fk_leg_null_GRP')
    cmds.select('rt_hip_CTRL', r = True)
    cmds.group(name = 'rt_fk_leg_null_GRP')
    cmds.parentConstraint('pelvis_JNT', 'lf_fk_leg_null_GRP', mo = True)
    cmds.parentConstraint('pelvis_JNT', 'rt_fk_leg_null_GRP', mo = True)
    return

def parentpvctrls(s):
    cmds.select('lf_elbow_PV', 'rt_elbow_PV', r = True)
    cmds.group(name = 'elbow_pv_null_GRP')
    cmds.parentConstraint('spineC_JNT', 'elbow_pv_null_GRP', mo = True)
    return

def createmasterctrl(s):
    cmds.circle(nr=(0,0,.5), c = (0,0,0), r = 2,name = 'master_CTRL')
    cmds.rotate(90,0,0)
    return


def organizectrls(s):
    cmds.select('master_CTRL', 'root_CTRL', r = True)
    cmds.makeIdentity(apply = True)
    cmds.parent('lf_foot_CTRL', 'master_CTRL')
    cmds.parent('rt_foot_CTRL', 'master_CTRL')
    cmds.parent('lf_knee_PV', 'master_CTRL')
    cmds.parent('rt_knee_PV', 'master_CTRL')
    cmds.parent('ik_lf_wrist_CTRL', 'master_CTRL')
    cmds.parent('ik_rt_wrist_CTRL', 'master_CTRL')
    cmds.parent('lf_IKFKSwitchNull_GRP', 'master_CTRL')
    cmds.parent('rt_IKFKSwitchNull_GRP', 'master_CTRL')
    cmds.parent('lf_fk_leg_null_GRP', 'master_CTRL')
    cmds.parent('rt_fk_leg_null_GRP', 'master_CTRL')
    cmds.parent('rt_hand_null_CTRL', 'master_CTRL')
    cmds.parent('lf_hand_null_CTRL', 'master_CTRL')
    cmds.parent('lf_clavicle_null_GRP', 'master_CTRL')
    cmds.parent('rt_clavicle_null_GRP', 'master_CTRL')
    cmds.parent('lf_fk_arm_null_GRP', 'master_CTRL')
    cmds.parent('rt_fk_arm_null_GRP', 'master_CTRL')
    cmds.parent('elbow_pv_null_GRP', 'master_CTRL')
    cmds.parent('root_CTRL', 'master_CTRL')
    cmds.parent('lf_hip_CTRL', 'pelvis_CTRL')
    cmds.parent('rt_hip_CTRL', 'pelvis_CTRL')
    cmds.parent('lf_legIKFKSwitchNull_GRP', 'master_CTRL')
    cmds.parent('rt_legIKFKSwitchNull_GRP', 'master_CTRL')
    cmds.select('master_CTRL', r = True)
    cmds.group(name = 'CTRLS')
    cmds.select('ik_lf_shoulder_JNT', 'ik_rt_shoulder_JNT', 'ik_lf_hip_JNT', 'ik_rt_hip_JNT', r = True)
    cmds.group(name = 'IK_JNTS')
    cmds.select('fk_lf_shoulder_JNT', 'fk_rt_shoulder_JNT', 'fk_lf_hip_JNT', 'fk_rt_hip_JNT',r = True)
    cmds.group(name = 'FK_JNTS')
    cmds.parent('IK_JNTS', 'JNTS')
    cmds.parent('FK_JNTS', 'JNTS')
    cmds.select('lf_arm_IK', 'rt_arm_IK', r = True)
    cmds.group(name = 'MISC')
    cmds.scaleConstraint('master_CTRL', 'JNTS', mo = True)
    cmds.select('lf_shoulder_info', 'lf_elbow_info', 'lf_wrist_info', 'ik_lf_wrist_info', 'lf_elbowpv_info','rt_shoulder_info', 'rt_elbow_info', 'rt_wrist_info', 'ik_rt_wrist_info', 'rt_elbowpv_info', r = True)    
    cmds.select('rt_hip_info', 'rt_knee_info', 'rt_ankle_info', 'ik_rt_ankle_info', 'rt_kneepv_info', add = True) 
    cmds.select('lf_hip_info', 'lf_knee_info', 'lf_ankle_info', 'ik_lf_ankle_info', 'lf_kneepv_info', add = True)
    cmds.group(name = 'Do_Not_Touch')
    cmds.parent('Do_Not_Touch', 'MISC')
    return
    
def createikfklegjnts(s):
    cmds.select('lf_hip_JNT', r = True)
    cmds.duplicate(name = 'ik_lf_hip_JNT')
    cmds.parent(w= True)
    cmds.pickWalk(d = 'down')
    cmds.rename('ik_lf_knee_JNT')
    cmds.pickWalk(d = 'down')
    cmds.rename('ik_lf_ankle_JNT')
    cmds.pickWalk(d = 'down')
    cmds.rename('ik_lf_ball_JNT')
    cmds.pickWalk(d = 'down')
    cmds.rename('ik_lf_toe_JNT')
    cmds.select('ik_lf_hip_JNT')
    cmds.duplicate(name = 'fk_lf_hip_JNT')
    cmds.pickWalk(d='down')
    cmds.rename('fk_lf_knee_JNT')
    cmds.pickWalk(d = 'down')
    cmds.rename('fk_lf_ankle_JNT')
    cmds.pickWalk(d = 'down')
    cmds.rename('fk_lf_ball_JNT')
    cmds.pickWalk(d = 'down')
    cmds.rename('fk_lf_toe_JNT')
    cmds.select('rt_hip_JNT', r = True)
    cmds.duplicate(name = 'ik_rt_hip_JNT')
    cmds.parent(w= True)
    cmds.pickWalk(d = 'down')
    cmds.rename('ik_rt_knee_JNT')
    cmds.pickWalk(d = 'down')
    cmds.rename('ik_rt_ankle_JNT')
    cmds.pickWalk(d = 'down')
    cmds.rename('ik_rt_ball_JNT')
    cmds.pickWalk(d = 'down')
    cmds.rename('ik_rt_toe_JNT')
    cmds.select('ik_rt_hip_JNT')
    cmds.duplicate(name = 'fk_rt_hip_JNT')
    cmds.pickWalk(d='down')
    cmds.rename('fk_rt_knee_JNT')
    cmds.pickWalk(d = 'down')
    cmds.rename('fk_rt_ankle_JNT')
    cmds.pickWalk(d = 'down')
    cmds.rename('fk_rt_ball_JNT')
    cmds.pickWalk(d = 'down')
    cmds.rename('fk_rt_toe_JNT')
    return

def createlegfkctrls(s):
    anklepos = cmds.xform('lf_ankle_JNT',q = True, ws = True, t = True)
    kneepos = cmds.xform('lf_knee_JNT',q = True, ws = True, t = True)
    circle_radius = (kneepos[2] - anklepos[2])
    hipPos = cmds.xform('lf_hip_JNT', q = True, ws = True, t = True)
    cmds.circle(nr=(0,0,.5), c = (0,0,0), radius = circle_radius, name = 'lf_hip_CTRL')
    cmds.rotate(90,0,0)
    cmds.move(hipPos[0], hipPos[1], hipPos[2])
    cmds.scale(1.4,1.4,1.4)
    kneePos = cmds.xform('lf_knee_JNT', q = True, ws = True, t = True)
    cmds.circle(nr=(0,0,1), c = (0,0,0),radius = circle_radius, name = 'lf_knee_CTRL')
    cmds.rotate(90, 0 ,0)
    cmds.move(kneePos[0], kneePos[1], kneePos[2]) 
    cmds.scale(1.4,1.4,1.4)
    anklePos = cmds.xform('lf_ankle_JNT', q = True, ws = True, t = True)
    cmds.circle(nr=(0,0,1), c = (0,0,0),radius = circle_radius, name = 'lf_ankle_CTRL')
    cmds.rotate(90, 0 ,0)
    cmds.move(anklePos[0], anklePos[1], anklePos[2]) 
    cmds.scale(1.4,1.4,1.4)
    ballPos = cmds.xform('lf_ball_JNT', q = True, ws = True, t = True)
    cmds.circle(nr=(0,0,1), c = (0,0,0),radius = circle_radius, name = 'lf_ball_CTRL')
    cmds.move(ballPos[0], ballPos[1], ballPos[2])
    cmds.scale(1.4,1.4,1.4)
    return

def duplicatelegfkctrls(s):
    hipPos = cmds.xform('rt_hip_JNT', q = True, ws = True, t = True)
    cmds.select('lf_hip_CTRL', r =True)
    cmds.duplicate(name = 'rt_hip_CTRL')
    cmds.move(hipPos[0], hipPos[1], hipPos[2])
    kneePos = cmds.xform('rt_knee_JNT', q = True, ws = True, t = True)
    cmds.select('lf_knee_CTRL', r =True)
    cmds.duplicate(name = 'rt_knee_CTRL')
    cmds.move(kneePos[0], kneePos[1], kneePos[2])
    anklePos = cmds.xform('rt_ankle_JNT', q = True, ws = True, t = True)
    cmds.select('lf_ankle_CTRL', r =True)
    cmds.duplicate(name = 'rt_ankle_CTRL')
    cmds.move(anklePos[0], anklePos[1], anklePos[2])
    ballPos = cmds.xform('rt_ball_JNT', q = True, ws = True, t = True)
    cmds.select('lf_ball_CTRL', r =True)
    cmds.duplicate(name = 'rt_ball_CTRL')
    cmds.move(ballPos[0], ballPos[1], ballPos[2])
    
    return
    
def constrainlegfkctrls(s):
    cmds.select('lf_hip_CTRL', 'lf_knee_CTRL','lf_ankle_CTRL', 'lf_ball_CTRL','rt_ankle_CTRL','rt_ball_CTRL', 'rt_hip_CTRL', 'rt_knee_CTRL',  r = True)
    cmds.makeIdentity(apply = True)
    cmds.parentConstraint('lf_hip_CTRL', 'fk_lf_hip_JNT', mo = True)
    cmds.parentConstraint('lf_knee_CTRL', 'fk_lf_knee_JNT', mo = True)
    cmds.parentConstraint('lf_ankle_CTRL', 'fk_lf_ankle_JNT', mo = True)
    cmds.parentConstraint('lf_ball_CTRL', 'fk_lf_ball_JNT', mo = True)
    cmds.parent('lf_knee_CTRL', 'lf_hip_CTRL')
    cmds.parent('lf_ankle_CTRL', 'lf_knee_CTRL')
    cmds.parent('lf_ball_CTRL', 'lf_ankle_CTRL')
    
    cmds.makeIdentity(apply = True)
    cmds.parentConstraint('rt_hip_CTRL', 'fk_rt_hip_JNT', mo = True)
    cmds.parentConstraint('rt_knee_CTRL', 'fk_rt_knee_JNT', mo = True)
    cmds.parentConstraint('rt_ankle_CTRL', 'fk_rt_ankle_JNT', mo = True)
    cmds.parentConstraint('rt_ball_CTRL', 'fk_rt_ball_JNT', mo = True)
    cmds.parent('rt_knee_CTRL', 'rt_hip_CTRL')
    cmds.parent('rt_ankle_CTRL', 'rt_knee_CTRL')
    cmds.parent('rt_ball_CTRL', 'rt_ankle_CTRL')
    return

def createlegikfk(s):
    anklePos = cmds.xform('lf_ankle_JNT', q = True, ws = True, t = True)
    cmds.file (ik_fk_ctrl_location, i = True)
    cmds.select ('lf_IKFKSwitchNull_GRP', r = True)
    cmds.rename('lf_legIKFKSwitchNull_GRP') 
    
    cmds.move(anklePos[0], anklePos[1], anklePos[2])
    cmds.scale(.076,.076,.076)
    cmds.move(.1,.7,-.257, r = True)
    cmds.rotate(90,-54, -90)
    cmds.move (anklePos[0], anklePos[1], anklePos[2], 'lf_legIKFKSwitchNull_GRP' + '.scalePivot', 'lf_legIKFKSwitchNull_GRP' + '.rotatePivot')
    cmds.pickWalk(d = 'down')
    cmds.rename('lf_legIKFKSwitch_CTRL')
    cmds.deleteAttr('lf_legIKFKSwitchNull_GRP|lf_legIKFKSwitch_CTRL.lf_IK_FK_switch')
    cmds.addAttr(longName = 'IK_FK_switch', defaultValue = 0, minValue =0, maxValue = 1, k = True)
    cmds.pickWalk(d = 'up')
    cmds.duplicate(name = 'rt_legIKFKSwitchNull_GRP')
    anklePos = cmds.xform('rt_ankle_JNT', q = True, ws = True, t = True)
    cmds.move(anklePos[0] + .1, anklePos[1] + .7, anklePos[2] -.257)
    cmds.pickWalk(d = 'down')
    cmds.rename( 'rt_legIKFKSwitch_CTRL')
    cmds.pickWalk(d = 'down')
    cmds.pickWalk(d = 'right')
    cmds.rename('rt_IK_TXT')
    cmds.pickWalk(d = 'right')
    cmds.rename('rt_FK_TXT')
    return

def setlegikfk(s):
    cmds.parentConstraint( 'ik_lf_hip_JNT', 'fk_lf_hip_JNT', 'lf_hip_JNT', mo = True)
    cmds.parentConstraint( 'ik_lf_knee_JNT', 'fk_lf_knee_JNT', 'lf_knee_JNT', mo = True)
    cmds.parentConstraint( 'ik_lf_ankle_JNT', 'fk_lf_ankle_JNT', 'lf_ankle_JNT', mo = True)
    cmds.parentConstraint( 'ik_lf_ball_JNT', 'fk_lf_ball_JNT', 'lf_ball_JNT', mo = True)
    cmds.parentConstraint( 'ik_lf_toe_JNT', 'fk_lf_toe_JNT', 'lf_toe_JNT', mo = True)
    cmds.parentConstraint( 'ik_rt_hip_JNT', 'fk_rt_hip_JNT', 'rt_hip_JNT', mo = True)
    cmds.parentConstraint( 'ik_rt_knee_JNT', 'fk_rt_knee_JNT', 'rt_knee_JNT', mo = True)
    cmds.parentConstraint( 'ik_rt_ankle_JNT', 'fk_rt_ankle_JNT', 'rt_ankle_JNT', mo = True)
    cmds.parentConstraint( 'ik_rt_ball_JNT', 'fk_rt_ball_JNT', 'rt_ball_JNT', mo = True)
    cmds.parentConstraint( 'ik_rt_toe_JNT', 'fk_rt_toe_JNT', 'rt_toe_JNT', mo = True)
    
    
    cmds.setAttr('lf_ankle_JNT_parentConstraint1.fk_lf_ankle_JNTW1', 0 )
    cmds.setDrivenKeyframe('lf_ankle_JNT_parentConstraint1.ik_lf_ankle_JNTW0', cd='lf_legIKFKSwitch_CTRL.IK_FK_switch')
    cmds.setDrivenKeyframe('lf_ankle_JNT_parentConstraint1.fk_lf_ankle_JNTW1', cd='lf_legIKFKSwitch_CTRL.IK_FK_switch')
    cmds.setAttr('lf_knee_JNT_parentConstraint1.fk_lf_knee_JNTW1', 0 )
    cmds.setDrivenKeyframe('lf_knee_JNT_parentConstraint1.ik_lf_knee_JNTW0', cd='lf_legIKFKSwitch_CTRL.IK_FK_switch')
    cmds.setDrivenKeyframe('lf_knee_JNT_parentConstraint1.fk_lf_knee_JNTW1', cd='lf_legIKFKSwitch_CTRL.IK_FK_switch')
    cmds.setAttr('lf_hip_JNT_parentConstraint1.fk_lf_hip_JNTW1', 0 )
    cmds.setDrivenKeyframe('lf_hip_JNT_parentConstraint1.ik_lf_hip_JNTW0', cd='lf_legIKFKSwitch_CTRL.IK_FK_switch')
    cmds.setDrivenKeyframe('lf_hip_JNT_parentConstraint1.fk_lf_hip_JNTW1', cd='lf_legIKFKSwitch_CTRL.IK_FK_switch')
    cmds.setAttr('lf_ball_JNT_parentConstraint1.fk_lf_ball_JNTW1', 0 )
    cmds.setDrivenKeyframe('lf_ball_JNT_parentConstraint1.ik_lf_ball_JNTW0', cd='lf_legIKFKSwitch_CTRL.IK_FK_switch')
    cmds.setDrivenKeyframe('lf_ball_JNT_parentConstraint1.fk_lf_ball_JNTW1', cd='lf_legIKFKSwitch_CTRL.IK_FK_switch')
    cmds.setAttr('lf_toe_JNT_parentConstraint1.fk_lf_toe_JNTW1', 0 )
    cmds.setDrivenKeyframe('lf_toe_JNT_parentConstraint1.ik_lf_toe_JNTW0', cd='lf_legIKFKSwitch_CTRL.IK_FK_switch')
    cmds.setDrivenKeyframe('lf_toe_JNT_parentConstraint1.fk_lf_toe_JNTW1', cd='lf_legIKFKSwitch_CTRL.IK_FK_switch')
    
    cmds.setAttr('lf_legIKFKSwitch_CTRL.IK_FK_switch', 1 )
    cmds.setAttr('lf_ankle_JNT_parentConstraint1.fk_lf_ankle_JNTW1', 1 )
    cmds.setAttr('lf_ankle_JNT_parentConstraint1.ik_lf_ankle_JNTW0', 0 )
    cmds.setDrivenKeyframe('lf_ankle_JNT_parentConstraint1.ik_lf_ankle_JNTW0', cd='lf_legIKFKSwitch_CTRL.IK_FK_switch')
    cmds.setDrivenKeyframe('lf_ankle_JNT_parentConstraint1.fk_lf_ankle_JNTW1', cd='lf_legIKFKSwitch_CTRL.IK_FK_switch')
    cmds.setAttr('lf_knee_JNT_parentConstraint1.fk_lf_knee_JNTW1', 1 )
    cmds.setAttr('lf_knee_JNT_parentConstraint1.ik_lf_knee_JNTW0', 0 )
    cmds.setDrivenKeyframe('lf_knee_JNT_parentConstraint1.ik_lf_knee_JNTW0', cd='lf_legIKFKSwitch_CTRL.IK_FK_switch')
    cmds.setDrivenKeyframe('lf_knee_JNT_parentConstraint1.fk_lf_knee_JNTW1', cd='lf_legIKFKSwitch_CTRL.IK_FK_switch')
    cmds.setAttr('lf_hip_JNT_parentConstraint1.fk_lf_hip_JNTW1', 1 )
    cmds.setAttr('lf_hip_JNT_parentConstraint1.ik_lf_hip_JNTW0', 0 )
    cmds.setDrivenKeyframe('lf_hip_JNT_parentConstraint1.ik_lf_hip_JNTW0', cd='lf_legIKFKSwitch_CTRL.IK_FK_switch')
    cmds.setDrivenKeyframe('lf_hip_JNT_parentConstraint1.fk_lf_hip_JNTW1', cd='lf_legIKFKSwitch_CTRL.IK_FK_switch')
    cmds.setAttr('lf_ball_JNT_parentConstraint1.fk_lf_ball_JNTW1', 1 )
    cmds.setAttr('lf_ball_JNT_parentConstraint1.ik_lf_ball_JNTW0', 0 )
    cmds.setDrivenKeyframe('lf_ball_JNT_parentConstraint1.ik_lf_ball_JNTW0', cd='lf_legIKFKSwitch_CTRL.IK_FK_switch')
    cmds.setDrivenKeyframe('lf_ball_JNT_parentConstraint1.fk_lf_ball_JNTW1', cd='lf_legIKFKSwitch_CTRL.IK_FK_switch')
    cmds.setAttr('lf_toe_JNT_parentConstraint1.fk_lf_toe_JNTW1', 1 )
    cmds.setAttr('lf_toe_JNT_parentConstraint1.ik_lf_toe_JNTW0', 0 )
    cmds.setDrivenKeyframe('lf_toe_JNT_parentConstraint1.ik_lf_toe_JNTW0', cd='lf_legIKFKSwitch_CTRL.IK_FK_switch')
    cmds.setDrivenKeyframe('lf_toe_JNT_parentConstraint1.fk_lf_toe_JNTW1', cd='lf_legIKFKSwitch_CTRL.IK_FK_switch')
    cmds.setAttr('rt_ankle_JNT_parentConstraint1.fk_rt_ankle_JNTW1', 0 )
    
    cmds.setDrivenKeyframe('rt_ankle_JNT_parentConstraint1.ik_rt_ankle_JNTW0', cd='rt_legIKFKSwitch_CTRL.IK_FK_switch')
    cmds.setDrivenKeyframe('rt_ankle_JNT_parentConstraint1.fk_rt_ankle_JNTW1', cd='rt_legIKFKSwitch_CTRL.IK_FK_switch')
    cmds.setAttr('rt_knee_JNT_parentConstraint1.fk_rt_knee_JNTW1', 0 )
    cmds.setDrivenKeyframe('rt_knee_JNT_parentConstraint1.ik_rt_knee_JNTW0', cd='rt_legIKFKSwitch_CTRL.IK_FK_switch')
    cmds.setDrivenKeyframe('rt_knee_JNT_parentConstraint1.fk_rt_knee_JNTW1', cd='rt_legIKFKSwitch_CTRL.IK_FK_switch')
    cmds.setAttr('rt_hip_JNT_parentConstraint1.fk_rt_hip_JNTW1', 0 )
    cmds.setDrivenKeyframe('rt_hip_JNT_parentConstraint1.ik_rt_hip_JNTW0', cd='rt_legIKFKSwitch_CTRL.IK_FK_switch')
    cmds.setDrivenKeyframe('rt_hip_JNT_parentConstraint1.fk_rt_hip_JNTW1', cd='rt_legIKFKSwitch_CTRL.IK_FK_switch')
    cmds.setAttr('rt_ball_JNT_parentConstraint1.fk_rt_ball_JNTW1', 0 )
    cmds.setDrivenKeyframe('rt_ball_JNT_parentConstraint1.ik_rt_ball_JNTW0', cd='rt_legIKFKSwitch_CTRL.IK_FK_switch')
    cmds.setDrivenKeyframe('rt_ball_JNT_parentConstraint1.fk_rt_ball_JNTW1', cd='rt_legIKFKSwitch_CTRL.IK_FK_switch')
    cmds.setAttr('rt_toe_JNT_parentConstraint1.fk_rt_toe_JNTW1', 0 )
    cmds.setDrivenKeyframe('rt_toe_JNT_parentConstraint1.ik_rt_toe_JNTW0', cd='rt_legIKFKSwitch_CTRL.IK_FK_switch')
    cmds.setDrivenKeyframe('rt_toe_JNT_parentConstraint1.fk_rt_toe_JNTW1', cd='rt_legIKFKSwitch_CTRL.IK_FK_switch')
    
    cmds.setAttr('rt_legIKFKSwitch_CTRL.IK_FK_switch', 1 )
    cmds.setAttr('rt_ankle_JNT_parentConstraint1.fk_rt_ankle_JNTW1', 1 )
    cmds.setAttr('rt_ankle_JNT_parentConstraint1.ik_rt_ankle_JNTW0', 0 )
    cmds.setDrivenKeyframe('rt_ankle_JNT_parentConstraint1.ik_rt_ankle_JNTW0', cd='rt_legIKFKSwitch_CTRL.IK_FK_switch')
    cmds.setDrivenKeyframe('rt_ankle_JNT_parentConstraint1.fk_rt_ankle_JNTW1', cd='rt_legIKFKSwitch_CTRL.IK_FK_switch')
    cmds.setAttr('rt_knee_JNT_parentConstraint1.fk_rt_knee_JNTW1', 1 )
    cmds.setAttr('rt_knee_JNT_parentConstraint1.ik_rt_knee_JNTW0', 0 )
    cmds.setDrivenKeyframe('rt_knee_JNT_parentConstraint1.ik_rt_knee_JNTW0', cd='rt_legIKFKSwitch_CTRL.IK_FK_switch')
    cmds.setDrivenKeyframe('rt_knee_JNT_parentConstraint1.fk_rt_knee_JNTW1', cd='rt_legIKFKSwitch_CTRL.IK_FK_switch')
    cmds.setAttr('rt_hip_JNT_parentConstraint1.fk_rt_hip_JNTW1', 1 )
    cmds.setAttr('rt_hip_JNT_parentConstraint1.ik_rt_hip_JNTW0', 0 )
    cmds.setDrivenKeyframe('rt_hip_JNT_parentConstraint1.ik_rt_hip_JNTW0', cd='rt_legIKFKSwitch_CTRL.IK_FK_switch')
    cmds.setDrivenKeyframe('rt_hip_JNT_parentConstraint1.fk_rt_hip_JNTW1', cd='rt_legIKFKSwitch_CTRL.IK_FK_switch')
    cmds.setAttr('rt_ball_JNT_parentConstraint1.fk_rt_ball_JNTW1', 1 )
    cmds.setAttr('rt_ball_JNT_parentConstraint1.ik_rt_ball_JNTW0', 0 )
    cmds.setDrivenKeyframe('rt_ball_JNT_parentConstraint1.ik_rt_ball_JNTW0', cd='rt_legIKFKSwitch_CTRL.IK_FK_switch')
    cmds.setDrivenKeyframe('rt_ball_JNT_parentConstraint1.fk_rt_ball_JNTW1', cd='rt_legIKFKSwitch_CTRL.IK_FK_switch')
    cmds.setAttr('rt_toe_JNT_parentConstraint1.fk_rt_toe_JNTW1', 1 )
    cmds.setAttr('rt_toe_JNT_parentConstraint1.ik_rt_toe_JNTW0', 0 )
    cmds.setDrivenKeyframe('rt_toe_JNT_parentConstraint1.ik_rt_toe_JNTW0', cd='rt_legIKFKSwitch_CTRL.IK_FK_switch')
    cmds.setDrivenKeyframe('rt_toe_JNT_parentConstraint1.fk_rt_toe_JNTW1', cd='rt_legIKFKSwitch_CTRL.IK_FK_switch')
    
    
    
    cmds.setAttr('lf_legIKFKSwitch_CTRL.IK_FK_switch', 1 )
    cmds.setAttr('lf_knee_PV.visibility', 0 )
    cmds.setAttr('lf_foot_CTRL.visibility', 0)
    cmds.setAttr('lf_legIKFKSwitch_CTRL|lf_IK_TXT.visibility', 0)
    cmds.setAttr('lf_legIKFKSwitch_CTRL|lf_FK_TXT.visibility', 1)
    cmds.setDrivenKeyframe('lf_knee_PV.visibility', cd='lf_legIKFKSwitch_CTRL.IK_FK_switch')
    cmds.setDrivenKeyframe('lf_hip_CTRL.visibility', cd='lf_legIKFKSwitch_CTRL.IK_FK_switch')
    cmds.setDrivenKeyframe('lf_foot_CTRL.visibility', cd='lf_legIKFKSwitch_CTRL.IK_FK_switch')
    cmds.setDrivenKeyframe('lf_legIKFKSwitch_CTRL|lf_IK_TXT.visibility', cd='lf_legIKFKSwitch_CTRL.IK_FK_switch')
    cmds.setDrivenKeyframe('lf_legIKFKSwitch_CTRL|lf_FK_TXT.visibility', cd='lf_legIKFKSwitch_CTRL.IK_FK_switch')
    
    cmds.setAttr('lf_legIKFKSwitch_CTRL.IK_FK_switch', 0 )
    cmds.setAttr('lf_knee_PV.visibility', 1 )
    cmds.setAttr('lf_foot_CTRL.visibility', 1)
    cmds.setAttr('lf_hip_CTRL.visibility', 0 )
    cmds.setAttr('lf_legIKFKSwitch_CTRL|lf_IK_TXT.visibility', 1)
    cmds.setAttr('lf_legIKFKSwitch_CTRL|lf_FK_TXT.visibility', 0)
    
    cmds.setDrivenKeyframe('lf_knee_PV.visibility', cd='lf_legIKFKSwitch_CTRL.IK_FK_switch')
    cmds.setDrivenKeyframe('lf_foot_CTRL.visibility', cd='lf_legIKFKSwitch_CTRL.IK_FK_switch')
    cmds.setDrivenKeyframe('lf_hip_CTRL.visibility', cd='lf_legIKFKSwitch_CTRL.IK_FK_switch')
    cmds.setDrivenKeyframe('lf_legIKFKSwitch_CTRL|lf_IK_TXT.visibility', cd='lf_legIKFKSwitch_CTRL.IK_FK_switch')
    cmds.setDrivenKeyframe('lf_legIKFKSwitch_CTRL|lf_FK_TXT.visibility', cd='lf_legIKFKSwitch_CTRL.IK_FK_switch')
    
    
    cmds.setAttr('rt_legIKFKSwitch_CTRL.IK_FK_switch', 1 )
    cmds.setAttr('rt_knee_PV.visibility', 0 )
    cmds.setAttr('rt_foot_CTRL.visibility', 0)
    cmds.setAttr('rt_legIKFKSwitch_CTRL|rt_IK_TXT.visibility', 0)
    cmds.setAttr('rt_legIKFKSwitch_CTRL|rt_FK_TXT.visibility', 1)
    cmds.setDrivenKeyframe('rt_knee_PV.visibility', cd='rt_legIKFKSwitch_CTRL.IK_FK_switch')
    cmds.setDrivenKeyframe('rt_hip_CTRL.visibility', cd='rt_legIKFKSwitch_CTRL.IK_FK_switch')
    cmds.setDrivenKeyframe('rt_foot_CTRL.visibility', cd='rt_legIKFKSwitch_CTRL.IK_FK_switch')
    cmds.setDrivenKeyframe('rt_legIKFKSwitch_CTRL|rt_IK_TXT.visibility', cd='rt_legIKFKSwitch_CTRL.IK_FK_switch')
    cmds.setDrivenKeyframe('rt_legIKFKSwitch_CTRL|rt_FK_TXT.visibility', cd='rt_legIKFKSwitch_CTRL.IK_FK_switch')
    
    cmds.setAttr('rt_legIKFKSwitch_CTRL.IK_FK_switch', 0 )
    cmds.setAttr('rt_knee_PV.visibility', 1 )
    cmds.setAttr('rt_foot_CTRL.visibility', 1)
    cmds.setAttr('rt_hip_CTRL.visibility', 0 )
    cmds.setAttr('rt_legIKFKSwitch_CTRL|rt_IK_TXT.visibility', 1)
    cmds.setAttr('rt_legIKFKSwitch_CTRL|rt_FK_TXT.visibility', 0)
    
    cmds.setDrivenKeyframe('rt_knee_PV.visibility', cd='rt_legIKFKSwitch_CTRL.IK_FK_switch')
    cmds.setDrivenKeyframe('rt_foot_CTRL.visibility', cd='rt_legIKFKSwitch_CTRL.IK_FK_switch')
    cmds.setDrivenKeyframe('rt_hip_CTRL.visibility', cd='rt_legIKFKSwitch_CTRL.IK_FK_switch')
    cmds.setDrivenKeyframe('rt_legIKFKSwitch_CTRL|rt_IK_TXT.visibility', cd='rt_legIKFKSwitch_CTRL.IK_FK_switch')
    cmds.setDrivenKeyframe('rt_legIKFKSwitch_CTRL|rt_FK_TXT.visibility', cd='rt_legIKFKSwitch_CTRL.IK_FK_switch')
    
    
    cmds.parentConstraint('lf_ankle_JNT', 'lf_legIKFKSwitchNull_GRP', mo = True)
    cmds.parentConstraint('rt_ankle_JNT', 'rt_legIKFKSwitchNull_GRP', mo = True)
   
    return
    
def nullmatch(s):
    shoulderPos = cmds.xform('lf_shoulder_JNT', q = True, ws = True, t = True)
    cmds.spaceLocator(name = 'lf_shoulder_info')
    cmds.move(shoulderPos[0], shoulderPos[1], shoulderPos[2])
    elbowPos = cmds.xform('lf_elbow_JNT', q = True, ws = True, t = True)
    cmds.spaceLocator(name = 'lf_elbow_info')
    cmds.move(elbowPos[0], elbowPos[1], elbowPos[2])
    wristPos = cmds.xform('lf_wrist_JNT', q = True, ws = True, t = True)
    cmds.spaceLocator(name = 'lf_wrist_info')
    cmds.move(wristPos[0], wristPos[1], wristPos[2])
    cmds.spaceLocator(name = 'ik_lf_wrist_info')
    cmds.move(wristPos[0], wristPos[1], wristPos[2])
    cmds.spaceLocator(name = 'lf_elbowpv_info')
    cmds.pointConstraint('lf_elbow_PV', 'lf_elbowpv_info', mo = False)
    cmds.pickWalk(d = 'down')
    cmds.pickWalk(d = 'right')
    cmds.delete()
    
    shoulderPos = cmds.xform('rt_shoulder_JNT', q = True, ws = True, t = True)
    cmds.spaceLocator(name = 'rt_shoulder_info')
    cmds.move(shoulderPos[0], shoulderPos[1], shoulderPos[2])
    elbowPos = cmds.xform('rt_elbow_JNT', q = True, ws = True, t = True)
    cmds.spaceLocator(name = 'rt_elbow_info')
    cmds.move(elbowPos[0], elbowPos[1], elbowPos[2])
    wristPos = cmds.xform('rt_wrist_JNT', q = True, ws = True, t = True)
    cmds.spaceLocator(name = 'rt_wrist_info')
    cmds.move(wristPos[0], wristPos[1], wristPos[2])
    cmds.spaceLocator(name = 'ik_rt_wrist_info')
    cmds.move(wristPos[0], wristPos[1], wristPos[2])
    cmds.spaceLocator(name = 'rt_elbowpv_info')
    cmds.pointConstraint('rt_elbow_PV', 'rt_elbowpv_info', mo = False)
    cmds.pickWalk(d = 'down')
    cmds.pickWalk(d = 'right')
    cmds.delete()
    cmds.select('lf_shoulder_info', 'lf_elbow_info', 'lf_wrist_info', 'ik_lf_wrist_info', 'lf_elbowpv_info','rt_shoulder_info', 'rt_elbow_info', 'rt_wrist_info', 'ik_rt_wrist_info', 'rt_elbowpv_info', r = True)    
    cmds.makeIdentity(apply = True)
    cmds.parentConstraint('lf_shoulder_JNT', 'lf_shoulder_info', mo = True)
    cmds.parentConstraint('lf_elbow_JNT', 'lf_elbow_info', mo = True)
    cmds.parentConstraint('lf_wrist_JNT', 'lf_wrist_info', mo = True)
    cmds.parentConstraint('lf_elbow_CTRL', 'lf_elbowpv_info', mo = True)
    cmds.parentConstraint('lf_wrist_JNT', 'ik_lf_wrist_info', mo = True)
    cmds.parent('lf_wrist_info', 'lf_elbow_info')
    cmds.parent('lf_elbow_info', 'lf_shoulder_info')
    cmds.parentConstraint('rt_shoulder_JNT', 'rt_shoulder_info', mo = True)
    cmds.parentConstraint('rt_elbow_JNT', 'rt_elbow_info', mo = True)
    cmds.parentConstraint('rt_wrist_JNT', 'rt_wrist_info', mo = True)
    cmds.parentConstraint('rt_elbow_CTRL', 'rt_elbowpv_info', mo = True)
    cmds.parentConstraint('rt_wrist_JNT', 'ik_rt_wrist_info', mo = True)
    cmds.parent('rt_wrist_info', 'rt_elbow_info')
    cmds.parent('rt_elbow_info', 'rt_shoulder_info')
    hipPos = cmds.xform('lf_hip_JNT', q = True, ws = True, t = True)
    cmds.spaceLocator(name = 'lf_hip_info')
    cmds.move(hipPos[0], hipPos[1], hipPos[2])
    kneePos = cmds.xform('lf_knee_JNT', q = True, ws = True, t = True)
    cmds.spaceLocator(name = 'lf_knee_info')
    cmds.move(kneePos[0], kneePos[1], kneePos[2])
    anklePos = cmds.xform('lf_ankle_JNT', q = True, ws = True, t = True)
    cmds.spaceLocator(name = 'lf_ankle_info')
    cmds.move(anklePos[0], anklePos[1], anklePos[2])
    cmds.spaceLocator(name = 'ik_lf_ankle_info')
    cmds.move(anklePos[0], anklePos[1], anklePos[2])
    cmds.spaceLocator(name = 'lf_kneepv_info')
    cmds.pointConstraint('lf_knee_PV', 'lf_kneepv_info', mo = False)
    cmds.pickWalk(d = 'down')
    cmds.pickWalk(d = 'right')
    cmds.delete()
    
    cmds.select('lf_hip_info', 'lf_knee_info', 'lf_ankle_info', 'ik_lf_ankle_info', 'lf_kneepv_info', r = True)    
    cmds.makeIdentity(apply = True)
    cmds.parentConstraint('lf_hip_JNT', 'lf_hip_info', mo = True)
    cmds.parentConstraint('lf_knee_JNT', 'lf_knee_info', mo = True)
    cmds.parentConstraint('lf_ankle_JNT', 'lf_ankle_info', mo = True)
    cmds.parentConstraint('lf_knee_CTRL', 'lf_kneepv_info', mo = True)
    cmds.parentConstraint('lf_ankle_JNT', 'ik_lf_ankle_info', mo = True)
    cmds.parent('lf_ankle_info', 'lf_knee_info')
    cmds.parent('lf_knee_info', 'lf_hip_info')
    
    hipPos = cmds.xform('rt_hip_JNT', q = True, ws = True, t = True)
    cmds.spaceLocator(name = 'rt_hip_info')
    cmds.move(hipPos[0], hipPos[1], hipPos[2])
    kneePos = cmds.xform('rt_knee_JNT', q = True, ws = True, t = True)
    cmds.spaceLocator(name = 'rt_knee_info')
    cmds.move(kneePos[0], kneePos[1], kneePos[2])
    anklePos = cmds.xform('rt_ankle_JNT', q = True, ws = True, t = True)
    cmds.spaceLocator(name = 'rt_ankle_info')
    cmds.move(anklePos[0], anklePos[1], anklePos[2])
    cmds.spaceLocator(name = 'ik_rt_ankle_info')
    cmds.move(anklePos[0], anklePos[1], anklePos[2])
    cmds.spaceLocator(name = 'rt_kneepv_info')
    cmds.pointConstraint('rt_knee_PV', 'rt_kneepv_info', mo = False)
    cmds.pickWalk(d = 'down')
    cmds.pickWalk(d = 'right')
    cmds.delete()
    
    cmds.select('rt_hip_info', 'rt_knee_info', 'rt_ankle_info', 'ik_rt_ankle_info', 'rt_kneepv_info', r = True)    
    cmds.makeIdentity(apply = True)
    cmds.parentConstraint('rt_hip_JNT', 'rt_hip_info', mo = True)
    cmds.parentConstraint('rt_knee_JNT', 'rt_knee_info', mo = True)
    cmds.parentConstraint('rt_ankle_JNT', 'rt_ankle_info', mo = True)
    cmds.parentConstraint('rt_knee_CTRL', 'rt_kneepv_info', mo = True)
    cmds.parentConstraint('rt_ankle_JNT', 'ik_rt_ankle_info', mo = True)
    cmds.parent('rt_ankle_info', 'rt_knee_info')
    cmds.parent('rt_knee_info', 'rt_hip_info')
    cmds.select('lf_shoulder_info', 'lf_elbow_info', 'lf_wrist_info', 'ik_lf_wrist_info', 'lf_elbowpv_info','rt_shoulder_info', 'rt_elbow_info', 'rt_wrist_info', 'ik_rt_wrist_info', 'rt_elbowpv_info', r = True)    
    cmds.select('rt_hip_info', 'rt_knee_info', 'rt_ankle_info', 'ik_rt_ankle_info', 'rt_kneepv_info', add = True) 
    cmds.select('lf_hip_info', 'lf_knee_info', 'lf_ankle_info', 'ik_lf_ankle_info', 'lf_kneepv_info', add = True)
    list = cmds.ls(sl = True, sn = True)
    for each in list:
        cmds.setAttr((each + '.overrideEnabled'), 1 )
        cmds.setAttr((each + '.overrideDisplayType'), 2 )
        cmds.setAttr((each + '.overrideVisibility'), 0 )
        cmds.setAttr((each + '.tx'), lock= True, keyable= False, channelBox =False )
        cmds.setAttr((each + '.ty'), lock= True, keyable= False, channelBox =False) 
        cmds.setAttr((each + '.tz'), lock= True, keyable= False, channelBox =False )
        cmds.setAttr((each + '.rx'), lock= True, keyable= False, channelBox =False )
        cmds.setAttr((each + '.ry'), lock= True, keyable= False, channelBox =False )
        cmds.setAttr((each + '.rz'), lock= True, keyable= False, channelBox =False )
        cmds.setAttr((each + '.sx'), lock= True, keyable= False, channelBox =False )
        cmds.setAttr((each + '.sy'), lock= True, keyable= False, channelBox =False )
        cmds.setAttr((each + '.sz'), lock= True, keyable= False, channelBox =False )
    cmds.select('rt_toe_IK', 'rt_ball_IK','rt_leg_IK','lf_toe_IK', 'lf_ball_IK','lf_leg_IK','ik_lf_shoulder_JNT', 'ik_rt_shoulder_JNT', 'fk_lf_shoulder_JNT', 'fk_rt_shoulder_JNT', 'ik_lf_hip_JNT', 'ik_rt_hip_JNT', 'fk_lf_hip_JNT', 'fk_rt_hip_JNT', r = True)
    newlist = cmds.ls(sl = True, sn = True)
    for each in newlist:
        cmds.setAttr((each + '.visibility'), 0)
    
    return
    
def colorctrls(s):
    cmds.setAttr(('lf_hip_CTRL.overrideEnabled'), 1 )
    cmds.setAttr ('lf_hip_CTRL.overrideColor', 14 )    
    cmds.setAttr(('lf_knee_CTRL.overrideEnabled'), 1 )
    cmds.setAttr ('lf_knee_CTRL.overrideColor', 19 )    
    cmds.setAttr(( 'lf_ankle_CTRL.overrideEnabled'), 1 )
    cmds.setAttr ('lf_ankle_CTRL.overrideColor', 29 )    
    cmds.setAttr(('lf_ball_CTRL.overrideEnabled'), 1 )
    cmds.setAttr ('lf_ball_CTRL.overrideColor', 6 )    
    cmds.setAttr(('rt_hip_CTRL.overrideEnabled'), 1 )
    cmds.setAttr ('rt_hip_CTRL.overrideColor', 24 )    
    cmds.setAttr(( 'rt_knee_CTRL.overrideEnabled'), 1 )
    cmds.setAttr ('rt_knee_CTRL.overrideColor', 10 )    
    cmds.setAttr(('rt_ankle_CTRL.overrideEnabled'), 1 )
    cmds.setAttr ('rt_ankle_CTRL.overrideColor', 12 )    
    cmds.setAttr(( 'rt_ball_CTRL.overrideEnabled'), 1 )
    cmds.setAttr ('rt_ball_CTRL.overrideColor', 13 )    
    cmds.setAttr(('lf_shoulder_CTRL.overrideEnabled'), 1)
    cmds.setAttr(('lf_shoulder_CTRL.overrideColor'), 14)    
    cmds.setAttr(('lf_elbow_CTRL.overrideEnabled'), 1)
    cmds.setAttr(('lf_elbow_CTRL.overrideColor'), 29)    
    cmds.setAttr(('lf_wrist_CTRL.overrideEnabled'), 1)
    cmds.setAttr(('lf_wrist_CTRL.overrideColor'), 6)    
    cmds.setAttr(('rt_shoulder_CTRL.overrideEnabled'), 1)
    cmds.setAttr(('rt_shoulder_CTRL.overrideColor'), 24)    
    cmds.setAttr(('rt_elbow_CTRL.overrideEnabled'), 1)
    cmds.setAttr(('rt_elbow_CTRL.overrideColor'), 12)    
    cmds.setAttr(('rt_wrist_CTRL.overrideEnabled'), 1)
    cmds.setAttr(('rt_wrist_CTRL.overrideColor'), 13)    
    cmds.setAttr(('pelvis_CTRL.overrideEnabled'), 1)
    cmds.setAttr(('pelvis_CTRL.overrideColor'), 17)    
    cmds.setAttr(('root_CTRL.overrideEnabled'), 1)
    cmds.setAttr(('root_CTRL.overrideColor'), 22)    
    cmds.setAttr(('spine_01_CTRL.overrideEnabled'), 1)
    cmds.setAttr(('spine_01_CTRL.overrideColor'), 25)    
    cmds.setAttr(('spine_02_CTRL.overrideEnabled'), 1)
    cmds.setAttr(('spine_02_CTRL.overrideColor'), 26)    
    cmds.setAttr(('spine_03_CTRL.overrideEnabled'), 1)
    cmds.setAttr(('spine_03_CTRL.overrideColor'), 23)    
    cmds.setAttr(('spine_04_CTRL.overrideEnabled'), 1)
    cmds.setAttr(('spine_04_CTRL.overrideColor'), 28)    
    cmds.setAttr(('neck_CTRL.overrideEnabled'), 1)
    cmds.setAttr(('neck_CTRL.overrideColor'), 29)    
    cmds.setAttr(('head_CTRL.overrideEnabled'), 1)
    cmds.setAttr(('head_CTRL.overrideColor'), 6)    
    cmds.setAttr(('lf_clavicle_CTRL.overrideEnabled'), 1)
    cmds.setAttr(('lf_clavicle_CTRL.overrideColor'), 6)    
    cmds.setAttr(('rt_clavicle_CTRL.overrideEnabled'), 1)
    cmds.setAttr(('rt_clavicle_CTRL.overrideColor'), 13)    
    cmds.setAttr(('lf_hand_null_CTRL.overrideEnabled'), 1)
    cmds.setAttr(('lf_hand_null_CTRL.overrideColor'), 6)       
    cmds.setAttr(('rt_hand_null_CTRL.overrideEnabled'), 1)
    cmds.setAttr(('rt_hand_null_CTRL.overrideColor'), 13)   
    cmds.setAttr(('rt_thumb_CTRL.overrideEnabled'), 0)
    cmds.setAttr(('rt_index_CTRL.overrideEnabled'), 0)
    cmds.setAttr(('rt_mid_CTRL.overrideEnabled'), 0)
    cmds.setAttr(('rt_ring_CTRL.overrideEnabled'), 0)
    cmds.setAttr(('rt_pinky_CTRL.overrideEnabled'), 0)
    cmds.setAttr(('rt_palm_CTRL.overrideEnabled'), 0)    
    cmds.setAttr(('lf_IKFKSwitch_CTRL.overrideColor'), 6)
    cmds.setAttr(('lf_legIKFKSwitch_CTRL.overrideColor'), 6)    
    cmds.setAttr(('lf_foot_CTRL.overrideEnabled'), 1)
    cmds.setAttr(('lf_foot_CTRL.overrideColor'), 6)    
    cmds.setAttr(('rt_foot_CTRL.overrideEnabled'), 1)
    cmds.setAttr(('rt_foot_CTRL.overrideColor'), 13)    
    cmds.setAttr(('lf_knee_PV.overrideEnabled'), 1)
    cmds.setAttr(('lf_knee_PV.overrideColor'), 6)    
    cmds.setAttr(('rt_knee_PV.overrideEnabled'), 1)
    cmds.setAttr(('rt_knee_PV.overrideColor'), 13)    
    cmds.setAttr(('ik_lf_wrist_CTRL.overrideEnabled'), 1)
    cmds.setAttr(('ik_lf_wrist_CTRL.overrideColor'), 6)    
    cmds.setAttr(('ik_rt_wrist_CTRL.overrideEnabled'), 1)
    cmds.setAttr(('ik_rt_wrist_CTRL.overrideColor'), 13)    
    cmds.setAttr(('lf_elbow_PV.overrideEnabled'), 1)
    cmds.setAttr(('lf_elbow_PV.overrideColor'), 6)    
    cmds.setAttr(('rt_elbow_PV.overrideEnabled'), 1)
    cmds.setAttr(('rt_elbow_PV.overrideColor'), 13)
    return
    
def lockchannels(s):
    cmds.select('spine_01_CTRL', 'spine_02_CTRL', 'spine_03_CTRL', 'spine_04_CTRL', 'neck_CTRL', 'head_CTRL', 'lf_hip_CTRL', 'lf_knee_CTRL', 'lf_ankle_CTRL', 'lf_ball_CTRL', 'rt_hip_CTRL','rt_knee_CTRL','rt_ankle_CTRL','rt_ball_CTRL', 'lf_shoulder_CTRL', 'lf_elbow_CTRL', 'lf_wrist_CTRL', 'rt_shoulder_CTRL', 'rt_elbow_CTRL', 'rt_wrist_CTRL', r = True)
    list = cmds.ls(sl = True, sn = True)
    for each in list:
        cmds.setAttr((each + '.tx'), lock= True, keyable= False, channelBox =False )
        cmds.setAttr((each + '.ty'), lock= True, keyable= False, channelBox =False) 
        cmds.setAttr((each + '.tz'), lock= True, keyable= False, channelBox =False )
        cmds.setAttr((each + '.sx'), lock= True, keyable= False, channelBox =False )
        cmds.setAttr((each + '.sy'), lock= True, keyable= False, channelBox =False )
        cmds.setAttr((each + '.sz'), lock= True, keyable= False, channelBox =False )
        cmds.setAttr((each + '.visibility'),keyable= False, channelBox = False)
    cmds.select('lf_legIKFKSwitch_CTRL','rt_legIKFKSwitch_CTRL', 'rt_IKFKSwitch_CTRL','lf_IKFKSwitch_CTRL', r = True)
    list2 = cmds.ls(sl = True, sn = True)
    for each in list2:
        cmds.setAttr((each + '.tx'), lock= True, keyable= False, channelBox =False )
        cmds.setAttr((each + '.ty'), lock= True, keyable= False, channelBox =False) 
        cmds.setAttr((each + '.tz'), lock= True, keyable= False, channelBox =False )
        cmds.setAttr((each + '.rx'), lock= True, keyable= False, channelBox =False )
        cmds.setAttr((each + '.ry'), lock= True, keyable= False, channelBox =False )
        cmds.setAttr((each + '.rz'), lock= True, keyable= False, channelBox =False )
        cmds.setAttr((each + '.sx'), lock= True, keyable= False, channelBox =False )
        cmds.setAttr((each + '.sy'), lock= True, keyable= False, channelBox =False )
        cmds.setAttr((each + '.sz'), lock= True, keyable= False, channelBox =False )
        cmds.setAttr((each + '.visibility'),     keyable= False, channelBox = False)
    cmds.select('lf_elbow_PV','rt_elbow_PV','lf_knee_PV','rt_knee_PV', r = True)
    list3 = cmds.ls(sl = True, sn = True)
    for each in list3:
        cmds.setAttr((each + '.rx'), lock= True, keyable= False, channelBox =False )
        cmds.setAttr((each + '.ry'), lock= True, keyable= False, channelBox =False )
        cmds.setAttr((each + '.rz'), lock= True, keyable= False, channelBox =False )
        cmds.setAttr((each + '.sx'), lock= True, keyable= False, channelBox =False )
        cmds.setAttr((each + '.sy'), lock= True, keyable= False, channelBox =False )
        cmds.setAttr((each + '.sz'), lock= True, keyable= False, channelBox =False )
        cmds.setAttr((each + '.visibility'),keyable= False, channelBox = False)
    cmds.select('ik_lf_wrist_CTRL','ik_rt_wrist_CTRL','lf_foot_CTRL', 'rt_foot_CTRL', 'pelvis_CTRL', 'root_CTRL', 'lf_clavicle_CTRL', 'rt_clavicle_CTRL', r = True)
    list4 = cmds.ls(sl = True, sn = True)
    for each in list4:
        cmds.setAttr((each + '.sx'), lock= True, keyable= False, channelBox =False )
        cmds.setAttr((each + '.sy'), lock= True, keyable= False, channelBox =False )
        cmds.setAttr((each + '.sz'), lock= True, keyable= False, channelBox =False )
        cmds.setAttr((each + '.visibility'),keyable= False, channelBox = False)
    
    cmds.setAttr('MISC.visibility', 0 )
    return

window = cmds.window(title = "Auto Rig" , iconName = 'Short Name', widthHeight = (800, 800) )
scrollLayout = cmds.scrollLayout(saw = True,sah = True, cr = True)
cmds.columnLayout (adjustableColumn = True)

cmds.frameLayout( label='skeleton setup', borderStyle='out', cll=True )
cmds.columnLayout()
cmds.button(label ='Import Skeleton', command = importskeleton)
cmds.button(label ='Mirror Skeleton', command = mirrorskeleton)
cmds.setParent( '..' )
cmds.setParent( '..' )
cmds.frameLayout( label='leg controls', borderStyle='out', cll = True )
cmds.columnLayout()
cmds.button(label = 'Create FK/IK JNTS', command = createikfklegjnts)
cmds.frameLayout( label='fk', borderStyle='out', cll = True )
cmds.columnLayout()
cmds.button(label = 'create leg controls', command = createlegfkctrls)
cmds.button(label = 'duplicate leg controls', command = duplicatelegfkctrls)
cmds.button(label = 'Constrain leg controls', command = constrainlegfkctrls)
cmds.setParent( '..' )
cmds.setParent( '..' )
cmds.frameLayout( label='ik', borderStyle='out', cll = True )
cmds.columnLayout()
cmds.button(label = 'Create Leg IK', command = legik)
cmds.button(label = 'Create Foot Control', command = createfootcontrols)
cmds.text ("Resize the Foot Control", align = 'center')
cmds.button(label = 'Duplicate Foot Control', command = duplicatefoot)
cmds.button(label = 'Create Foot IK', command = reversefootwindow)
cmds.button(label = 'Create knee pole vectors', command = createkneepv)
cmds.text ("Resize the Knee Control", align = 'center')
cmds.button(label = 'Duplicate knee pole vectors', command = duplicateknee)
cmds.button(label = 'Constrain leg pole vector', command = kneepvconstrain)
cmds.setParent( '..' )
cmds.setParent( '..' )
cmds.button(label = 'Create Leg IK/FK switch control', command = createlegikfk)
cmds.button(label = 'Set leg ik/fk switch', command = setlegikfk)
cmds.setParent( '..' )
cmds.setParent( '..' )
cmds.frameLayout( label='hips and spine', borderStyle='out', cll = True )
cmds.columnLayout()
cmds.button(label = 'Create root and pelvis controls', command = createroot)
cmds.button(label = 'Create spine controls', command = createspinectrls)
cmds.button(label = 'Create clavicle controls', command = createclavctrls)
cmds.text ("Resize root and spine controls as needed", align = 'center')
cmds.button(label = 'duplicate clavicle controls', command = duplicateclavctrls)
cmds.button(label = 'Constrain root, clavicle and spine controls', command = parentbackctrls)
cmds.setParent( '..' )
cmds.setParent( '..' )
cmds.frameLayout( label='arm controls', borderStyle='out', cll = True )
cmds.columnLayout()
cmds.button(label = 'Create FK/IK JNTS', command = createikfkjnts)
cmds.frameLayout( label='fk', borderStyle='out', cll = True )
cmds.columnLayout()
cmds.button(label = 'create arm controls', command = createarmctrls)
cmds.text ("Resize controls as needed", align = 'center')
cmds.button(label = 'Duplicate FK controls', command = duplicatefkctrls)
cmds.button(label = 'Constrain arm controls', command = constrainarmctrls)
cmds.setParent( '..' )
cmds.setParent( '..' )
cmds.frameLayout( label='ik', borderStyle='out', cll = True )
cmds.columnLayout()
cmds.button(label = 'Create arm IK', command = createarmik)
cmds.button(label = 'Create IK controls', command = creatarmikctrls)
cmds.button(label = 'Duplicate IK controls', command = duplicateikctrls)
cmds.button(label = 'constrain IK controls', command = constrainikctrls)
cmds.setParent( '..' )
cmds.setParent( '..' )
cmds.button(label = 'Create IK/FK switch control', command = createikfk)
cmds.button(label = 'set ik/fk switch', command = setikfk)
cmds.setParent( '..' )
cmds.setParent( '..' )
cmds.frameLayout( label='hand controls', borderStyle='out', cll = True )
cmds.columnLayout()
cmds.button(label = 'Create hand controls', command = createhandctrls)
cmds.setParent( '..' )
cmds.setParent( '..' )
cmds.frameLayout( label='cleanup/organization', borderStyle='out', cll = True )
cmds.columnLayout()
cmds.button(label = 'crate null locators for matching', command = nullmatch)
cmds.button(label = 'group and parent clavicle controls to spine', command = groupclavctrls)
cmds.button(label = 'parent ik/fk chains to clav and pelvis joints', command = parentikfkctrls)
cmds.button(label = 'group and parent pv controls', command = parentpvctrls)
cmds.button(label = 'create master control', command = createmasterctrl)
cmds.button(label = 'parent and organize all controls', command = organizectrls)
cmds.button(label = 'color code controls', command = colorctrls)
cmds.button(label = 'lock/hide unused channels', command = lockchannels)
cmds.setParent( '..' )
cmds.setParent( '..' )
cmds.button( label='Close', command=('cmds.deleteUI(\"' + window + '\", window=True)') )
cmds.showWindow (window)